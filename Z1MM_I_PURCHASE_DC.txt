*REPORT  Z1MM_I_PURCHASE_DC_TESTNUT.
* Confidential and Proprietary
* Copyright 2008, Gosoft
* All Rights Reserved
************************************************************************
* ABAP Name  : Z1MM_I_PURCHASE_DC
* Created by : Suticha (PIMOLSOP)
* Created on : 11.02.2008
* Version    : 1.0
*-----------------------------------------------------------------------
* Description: Outbound Purchase From DC
*-----------------------------------------------------------------------
*  Modification Log:
*    1) Changed by    :
*       Changed on    :
*       Transport     :
*       Correction-No :
*       Description   :
*-----------------------------------------------------------------------
*    2) Changed by    : Rawisara T.
*       Changed on    : 11/11/2019
*       Transport     :
*       Correction-No :
*       Description   : แก้ไข Text Field Date เป็น 6 Digit , selection screen daily monthly
*                       daily ใช้ material จาก zmm_mat_dc , monthly --> koncept เดิม
*-----------------------------------------------------------------------
report z1mm_i_purchase_dc no standard page heading message-id 38
                          line-count 65
                          line-size 192.

*&---------------------------------------------------------------------*
*&  T A B L E S                                                        *
*&---------------------------------------------------------------------*
tables: mkpf, mseg, mara.
tables: bkpf, bseg. "INS-THEERSER 20080505

*&---------------------------------------------------------------------*
*& I N C L U D E  P R O G R A M                                        *
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&  T Y P E S ( typ_ )                                                 *
*&---------------------------------------------------------------------*
types: begin of ty_mseg,
       mblnr    type mseg-mblnr,
       mjahr    type mseg-mjahr,
       zeile    type mseg-zeile,
       bwart    type mseg-bwart,
       matnr    type mseg-matnr,
       werks    type mseg-werks,
       lgort    type mseg-lgort,
       lifnr    type mseg-lifnr,
       shkzg    type mseg-shkzg,
       dmbtr    type mseg-dmbtr,
       menge    type mseg-menge,
       bukrs    type mseg-bukrs,
       budat    type mkpf-budat,
       exbwr    type mseg-exbwr,    "INS-SUCHAPOP 20150504
       end of ty_mseg.

types: begin of ty_mara,
       matnr    type mara-matnr,
       matkl    type mara-matkl,
       end of ty_mara.

types: begin of ty_lfa1,
       lifnr    type lfa1-lifnr,
       adrnr    type lfa1-adrnr,
       name1    type adrc-name1,
       sort2    type adrc-sort2,
       end of ty_lfa1.

types: begin of ty_rseg,
       belnr    type rseg-belnr,
       gjahr    type rseg-gjahr,
       buzei    type rseg-buzei,
       ebeln    type rseg-ebeln,
       ebelp    type rseg-ebelp,
       matnr    type rseg-matnr,
       bukrs    type rseg-bukrs,
       werks    type rseg-werks,
       shkzg    type rseg-shkzg,
       menge    type rseg-menge,
       meins    type rseg-meins,
       xblnr    type rseg-xblnr,
       budat    type rbkp-budat,
       lifnr    type rbkp-lifnr,
       rmwwr    type rbkp-rmwwr,
       wmwst1   type rbkp-wmwst1,
*       lgort    TYPE rseg-lgort,
       end of ty_rseg.

types: begin of ty_ekpo,
       ebeln    type ekpo-ebeln,
       ebelp    type ekpo-ebelp,
       werks    type ekpo-werks,
       lgort    type ekpo-lgort,
       bednr    type ekpo-bednr,
       end of ty_ekpo.

types: begin of ty_data1,
       bukrs    type mseg-bukrs,
       werks    type mseg-werks,
       lifnr    type mseg-lifnr,
       matnr    type mseg-matnr,
       shkzg    type mseg-shkzg,
       mblnr    type mseg-mblnr,
       mjahr    type mseg-mjahr,
       zeile    type mseg-zeile,
       bwart    type mseg-bwart,
       lgort    type mseg-lgort,
       dmbtr    type mseg-dmbtr,
       menge    type mseg-menge,
       budat    type mkpf-budat,
       adrnr    type lfa1-adrnr,
       name1    type adrc-name1,
       sort2    type adrc-sort2,
       matkl    type mara-matkl,
       pma(2)   type c,
       retail   type mseg-dmbtr,
       end of ty_data1.

types: begin of ty_data2,
       bukrs    type rseg-bukrs,
       werks    type rseg-werks,
       budat    type rbkp-budat,
       bednr    type ekpo-bednr,
       matnr    type rseg-matnr,
       xblnr    type rseg-xblnr,
       belnr    type rseg-belnr,
       gjahr    type rseg-gjahr,
       buzei    type rseg-buzei,
       ebeln    type rseg-ebeln,
       ebelp    type rseg-ebelp,
       shkzg    type rseg-shkzg,
       menge    type rseg-menge,
       meins    type rseg-meins,
       lifnr    type rbkp-lifnr,
       rmwwr    type rbkp-rmwwr,
       wmwst1   type rbkp-wmwst1,
       qty_rcv  type rseg-menge,
       qty_dam  type rseg-menge,
       matkl    type mara-matkl,
       date(10) type c,
       end of ty_data2.

types: begin of ty_report1,
       bukrs      type mseg-bukrs,
       werks      type mseg-werks,
       lifnr      type mseg-lifnr,
       sort2      type adrc-sort2,
       pma(2)     type c,
       matnr      type mseg-matnr,
       docty(2)   type c,
       shkzg      type mseg-shkzg,
       mblnr      type mseg-mblnr,
       mjahr      type mseg-mjahr,
       zeile      type mseg-zeile,
       bwart      type mseg-bwart,
       lgort      type mseg-lgort,
       dmbtr      type mseg-dmbtr,
       menge      type mseg-menge,
       budat      type mkpf-budat,
       adrnr      type lfa1-adrnr,
       name1      type adrc-name1,
       matkl      type mara-matkl,
       retail     type mseg-dmbtr,
       end of ty_report1.

types: begin of ty_report2,
       bukrs    type rseg-bukrs,
       werks    type rseg-werks,
       budat    type rbkp-budat,
       bednr    type ekpo-bednr,
       matnr    type rseg-matnr,
       qty_rcv  type rseg-menge,
       qty_dam  type rseg-menge,
       meins    type rseg-meins,
       xblnr    type rseg-xblnr,
       rmwwr    type rbkp-rmwwr,     "Invoic Amount
       wmwst1   type rbkp-wmwst1,    "Vat Amount
       date(10) type c,
       end of ty_report2.

types: begin of ty_total1,
       menge    type mseg-menge,
       dmbtr    type mseg-dmbtr,
       retail   type mseg-dmbtr,
       end of ty_total1.

types: begin of ty_total2,
       qty_rcv  type rseg-menge,
       qty_dam  type rseg-menge,
       rmwwr    type rbkp-rmwwr,     "Invoic Amount
       wmwst1   type rbkp-wmwst1,    "Vat Amount
       end of ty_total2.

types: begin of ty_calcoff,
       offlast      type i,
       total_col    type num2,
       col01        type i,
       col02        type i,
       col03        type i,
       col04        type i,
       col05        type i,
       col06        type i,
       col07        type i,
       col08        type i,
       col09        type i,
       col10        type i,
       col11        type i,
       offset01     type i,
       offset02     type i,
       offset03     type i,
       offset04     type i,
       offset05     type i,
       offset06     type i,
       offset07     type i,
       offset08     type i,
       offset09     type i,
       offset10     type i,
       offset11     type i,
       end of ty_calcoff.

types: begin of ty_output1,
       period(6)   type c,
       plant(4)    type c,
       vendor(7)   type c,
       pma(2)      type c,
       prod(12)    type c,
       docty(2)    type c,
       filler1(13) type c,
       quan(16)    type c,
       filler2(17) type c,
       cost(16)    type c,
       filler3(15) type c,
       retail(16)  type c,
       order(10)   type c,
       end of ty_output1.

types: begin of ty_output2,
       jobs(4)        type c,
       plant(4)      type c,
       datetime(18)  type c,
       trackno(18)   type c,
       recp(5)       type c,
       prod(18)      type c,
       qty_rcv(7)    type c,
       qty_dam(7)    type c,
       qty_over(8)   type c,
       catch(9)      type c,
       date(10)      type c,
       cost(12)      type c,
       sy_flag(1)    type c,
       po_type(1)    type c,
       flow_qty(7)   type c,
       flow_flag(1)  type c,
       gen_flow(1)   type c,
       unit_ship(5)  type c,
       inv_ref(10)   type c,
       inv_amt(13)   type c,
       vat_amt(13)   type c,
       end of ty_output2.

types: begin of ty_output3,
      period(8)   type c,
      plant(4)    type c,
      vendor(7)   type c,
      prod(12)    type c,
      quan(16)    type c,
      cost(17)    type c,
      end of ty_output3.

*&---------------------------------------------------------------------*
*&  C O N S T A N T S ( gc_ )                                          *
*&---------------------------------------------------------------------*
constants: gc_kostl        type mseg-kostl value 'CENTRAL',
           gc_unixname(18)  type c         value 'PURJV.TXT',
           gc_unixname2(18) type c         value 'PURAS400.TXT',
           gc_unixname4(18) type c         value 'PURJV_PART1.TXT',
           gc_unixname5(18) type c         value 'PURJV_PART2.TXT',
           gc_jobs(4)      type c          value '1010',
           gc_time(8)      type c          value '00:00:00'.

*&---------------------------------------------------------------------*
*&  I N T E R N A L   T A B L E S ( gt_ )                              *
*&---------------------------------------------------------------------*
data: gt_mseg     type table of ty_mseg      with header line,
      gt_mara1    type table of ty_mara      with header line,
      gt_lfa1     type table of ty_lfa1      with header line,
      gt_rseg     type table of ty_rseg      with header line,
      gt_mara2    type table of ty_mara      with header line,
      gt_ekpo     type table of ty_ekpo      with header line,
      gt_data1    type table of ty_data1     with header line,
      gt_data2    type table of ty_data2     with header line,
      gt_datastm1    type table of ty_data1     with header line, "for stm file 1
      gt_datastm2    type table of ty_data1     with header line,"for stm file 2
      gt_report1  type table of ty_report1   with header line,
      gt_report2  type table of ty_report2   with header line,
      gt_reportstm1  type table of ty_report1   with header line, "for 1 stm file
      gt_reportstm2  type table of ty_report1   with header line, "for 2 stm file
      gt_output1  type table of ty_output1   with header line,
      gt_output4  type table of ty_output1   with header line, "for 2 stm file
      gt_output2  type table of ty_output2   with header line,
      gt_output3  type table of ty_output3   with header line.

data: begin of gt_export occurs 0,
       text(1000)    type c,
       end of gt_export.
data: begin of gt_export2 occurs 0,
       text(1000)    type c,
       end of gt_export2.

*&---------------------------------------------------------------------*
*&  S T R U C T U R E S ( gs_ )  &  V A R I A B L E S ( gv_ )          *
*&---------------------------------------------------------------------*
data: begin of gs_t001,
      bukrs  type t001-bukrs,
      butxt  type t001-butxt,
      end of gs_t001.

data: gv_mjahr      type mseg-mjahr,
      gv_werks      type mseg-werks,
      gv_period(7)  type c,
      gv_month(2)   type c,
      gv_day(2)   type c.

* ABAP List
data: gs_calc1   type ty_calcoff,
      gs_calc2   type ty_calcoff.

* >>> BEGIN OF INSERT THEERSER 20080505
data: begin of i_bkpf occurs 0,
        bukrs like bkpf-bukrs,
        belnr like bkpf-belnr,
        gjahr like bkpf-gjahr,
        bktxt like bkpf-bktxt,
        xblnr like bkpf-xblnr,
        budat like bkpf-budat,
        bldat like bkpf-bldat,
      end of i_bkpf.

types: begin of t_bseg,
        gjahr like bseg-gjahr,
        belnr like bseg-belnr,
        bukrs like bseg-bukrs,
        buzei like bseg-buzei,
        bupla like bseg-bupla,
        lifnr like bseg-lifnr,
        buzid like bseg-buzid,
        koart like bseg-koart,
        shkzg like bseg-shkzg,
        dmbtr like bseg-dmbtr,
        zfbdt like bseg-zfbdt,
        ebeln like bseg-ebeln,
        zuonr like bseg-zuonr,
        mwart like bseg-mwart,
        sgtxt like bseg-sgtxt,
        augdt like bseg-augdt,
        augbl like bseg-augbl,
      end of t_bseg.

data: i_bseg    type table of t_bseg with header line,
      i_bseg_gr type table of t_bseg with header line,
      i_bseg_tx type table of t_bseg with header line.

data: begin of i_data occurs 0,
        belnr like bseg-belnr,
        bupla like bseg-bupla,
        shkzg like bseg-shkzg,
        bktxt like bkpf-bktxt, "H
        budat like bkpf-budat, "H
        bednr like ekpo-bednr, "(sgtxt 10 digits search)
        ebeln like ekpo-ebeln,
        aedat like ekpo-aedat, "(sgtxt 10 digits search)
        xblnr like bkpf-xblnr, "H
        bldat like bkpf-bldat, "H
        lifnr like bseg-lifnr,
        zfbdt like bseg-zfbdt,
        zuonr like bseg-zuonr,
        vlvat like bseg-dmbtr, "(vat amount)
        vlamt like bseg-dmbtr, "(vendor amount inc.vat)
        sgtxt(10),
      end of i_data.

data: begin of gt_report2n occurs 0,
        brnch(4),
        dctyp(2),
        docno(10),
        brflg(1),  "blank
        arecd(10), "blank
        docdt(6),
        trnty(1),  "blank
        trncd(2),  "blank
        indty(2),  "blank
        indno(10),
        inddt(6),
        rfdty(2),  "blank
        rfdno(10),
        rfddt(6),
        cvcod(7),
        crflg(1),  "blank
        crtrm(3),  "blank
        duedt(6),
        vatamt(10),
        netamt(12),
        incamt(12),
        excamt(12),
        belnr(10), "for check
        sgtxt(10), "for check
      end of gt_report2n.


data r_bupla   type range of bseg-bupla.
data gr_bupla  like line of r_bupla.
data gc_fname(32) type c.
data gv_datum type sy-datum."INS-THEERSER 20091209

data: gs_unixname3(32) type c value 'ALL_purchase_detail_YYYYMMDD.txt',
      r_date_mis(8) type c.

data t_code type sy-tcode. "add by Max on 11/10/2018
data screenname type c length 20.
data case_stm type c value '0'.
data file2_tmp(8) type c.
* <<< END OF INSERT THEERSER 20080505

* <<< START OF INSERT RAWISARA T.
  types : begin of ty_mat.
    include structure zmm_mat_pur.
  types : end of ty_mat.

  data : it_mat type table of ty_mat,
         wa_mat like line of it_mat.
* <<< END OF INSERT RAWISARA T.
*&---------------------------------------------------------------------*
*&  F I E L D - S Y M B O L S                                          *
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&  R A N G E S                                                        *
*&---------------------------------------------------------------------*
data: r_bwart   type range of mseg-bwart,
gs_bwart  like line of r_bwart.

*&---------------------------------------------------------------------*
*&  M A C R O   C O M M A N D   D E F I N I T I O N                    *
*&---------------------------------------------------------------------*
define m%fill_bwart.
  clear gs_bwart.
  gs_bwart-sign   = 'I'.
  gs_bwart-option = 'EQ'.
  gs_bwart-low    = &1.
  append gs_bwart to r_bwart.
end-of-definition.

*&---------------------------------------------------------------------*
*&  S E L E C T I O N  S C R E E N                                     *
*&---------------------------------------------------------------------*
selection-screen begin of block blk1 with frame title text-001.
parameters: p_bukrs    type mseg-bukrs default '0001'  obligatory,
            p_event(5) type c  obligatory.
select-options: s_werks for mseg-werks obligatory,
                s_lgort for mseg-lgort,
                s_matkl for mara-matkl,
                s_matnr for mseg-matnr,
                s_lifnr for mseg-lifnr.
parameters p_period    type rf40r-disp_perio obligatory.
*SELECT-OPTIONS s_budat FOR mkpf-budat NO-DISPLAY."CMT-THEERSR 20090317
select-options s_budat for mkpf-budat modif id una. "Changed by max on 11102018

selection-screen begin of block blk2 with frame title text-002.

selection-screen begin of line.
parameter rb_java  radiobutton group grp1 modif id una user-command typ.
selection-screen comment (22) text-004.
* >>>> Edit by Rawisara T. Start
  selection-screen position 30.
  parameters: ra_mo radiobutton group typ modif id typ default 'X'.
  selection-screen comment (7) text-ram for field ra_mo.
  selection-screen position 40.
  parameters: ra_da radiobutton group typ modif id typ.
  selection-screen comment (5) text-rad for field ra_da.
* <<<< Edit by Rawisara T. END
selection-screen end of line.

selection-screen begin of line.
parameter rb_as400 radiobutton group grp1  modif id una.
selection-screen comment (28) text-005.
selection-screen end of line.
selection-screen begin of line.
parameter rb_mark radiobutton group grp1  modif id una.
selection-screen comment (22) text-006.
selection-screen end of line.
selection-screen begin of line.
parameter rb_mis radiobutton group grp1  modif id una.
selection-screen comment (22) text-016.
selection-screen end of line.
selection-screen begin of line.
parameter rb_stm radiobutton group grp1 modif id hid.
selection-screen comment (22) text-017 modif id hid.
selection-screen end of line.
selection-screen end of block blk2.


selection-screen begin of block blk4 with frame title text-018.
select-options s_file1 for mkpf-budat modif id hid.
select-options s_file2 for mkpf-budat modif id hid.
selection-screen end of block blk4.

selection-screen begin of block blk3 with frame title text-003.
parameters ch_file  as checkbox user-command ffile.
selection-screen begin of line.
selection-screen comment (3) text-009.
parameter rb_unix  radiobutton group grp2 modif id hd2.
selection-screen comment (4) text-007.
selection-screen end of line.

selection-screen begin of line.
selection-screen comment (3) text-009.
parameter rb_local radiobutton group grp2 modif id hd2.
selection-screen comment (11) text-008.
parameter p_file   type rlgrap-filename modif id hd2.
selection-screen end of line.



parameters p_ftp as checkbox modif id hid.
*--START OF INS-SUCHAPOP 20140626
parameters cb_pipe  as checkbox.
*--END OF INS-SUCHAPOP 20140626



selection-screen end of block blk3.
selection-screen end of block blk1.

initialization. "INS-THEERSER 20091209
  gv_datum = sy-datum.
  gv_datum+6(2) = '01'.
  gv_datum = gv_datum - 1.
  p_period = gv_datum(6).
*  IF sy-tcode = 'Z01MM_STM'.
  if sy-tcode = 'Z01MM_STM'.
    case_stm = '1'.
    rb_stm = 'X'.
    p_event = 'MMODS'.
    s_file1-low = '01012012'.
  else.
    case_stm = '0'.
    p_event = 'MMO01'.
    rb_java = 'X'.
  endif.


*&---------------------------------------------------------------------*
*&  A T  S E L E C T I O N   S C R E E N   O U T P U T                 *
*&---------------------------------------------------------------------*
at selection-screen output.

*  IF sy-tcode = 'Z01MM_STM'.
  if sy-tcode = 'Z01MM_STM'.
    perform auto_update_field using '1'.
    loop at screen.
        if screen-group1 = 'UNA'.
        screen-input = '0'.
        modify screen.  "Inactive input

        elseif screen-name = 'S_FILE2-LOW' or
               screen-name = 'S_FILE2-HIGH'.

          screen-input = '0'.
          modify screen.  "Inactive input

        endif.
    endloop.
  else.
    if rb_stm eq 'X'.
    else.
    loop at screen.
      if screen-group1 = 'HID'.
        screen-active = '0'.
        modify screen.
      endif.
    endloop.
    endif.
  endif.


* Update code by max at 11/10/2018
  if ch_file = space.
    loop at screen.
      if screen-group1 = 'HD2'.
        screen-input = '0'.
        modify screen.
      endif.
    endloop.
  endif.

  if rb_java eq space.
    loop at screen.
      if screen-group1 = 'TYP'.
         screen-input = '0'.
         modify screen.  "Inactive input
      endif.
    endloop.
  endif.

*      IF rb_as400 EQ 'X' OR rb_mark EQ 'X' OR rb_mis EQ 'X'.




case_stm = case_stm.


*&---------------------------------------------------------------------*
*&  A T  S E L E C T I O N  S C R E E N  O N  V A L U E - R E Q U E S T*
*&---------------------------------------------------------------------*
at selection-screen on value-request for p_file.
    case_stm = case_stm.
  perform f_get_f4_filename using p_file.


*&---------------------------------------------------------------------*
*&  A T  S E L E C T I O N   S C R E E N                               *
*&---------------------------------------------------------------------*
at selection-screen.

  if ch_file = space.
    rb_unix = ''.
    rb_local = ''.
  endif.

  if rb_unix eq ''.
    p_ftp = ''.
  endif.

  if rb_local eq 'X' and p_file is initial.
    message e000 with text-013.

  endif.

  if sy-tcode = 'Z01MM_STM'.
    if s_file1-high is initial.
      message e000(38) with 'Please fill in Posting date'.
    endif.

  else.
    if s_budat is initial.
    message e000(38) with 'Please fill in Posting date'.

    endif.

  endif.




*&---------------------------------------------------------------------*
*&  S T A R T - O F - S E L E C T I O N                                *
*&---------------------------------------------------------------------*
start-of-selection.


  perform f_initial_value.

   perform f_get_data.
*  ENDIF.

*&---------------------------------------------------------------------*
*&  E N D - O F - S E L E C T I O N                                    *
*&---------------------------------------------------------------------*
end-of-selection.
  perform f_process_data.
  perform f_write_report.
  if ch_file eq 'X'.
    perform f_output_data.

*    IF p_file EQ 'X'. "edit by Theerapun
    if p_ftp eq 'X'.
      perform ftp_call.
    endif.
  endif.

*&---------------------------------------------------------------------*
*&  T O P - O F - P A G E                                              *
*&---------------------------------------------------------------------*
top-of-page.
  perform f_write_toppage.
  perform f_write_headcolumn.

*&---------------------------------------------------------------------*
*&  S U B R O U T I N E S                                              *
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  f_get_f4_filename
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_FILE  text
*----------------------------------------------------------------------*
form f_get_f4_filename using    p_file.

  call function 'WS_FILENAME_GET'
    exporting
      def_path         = 'C:\'
      mask             = ',*.txt,*.txt.'
      mode             = 'O'
      title            = text-011
    importing
      filename         = p_file
    exceptions
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      others           = 5.
  if sy-subrc <> 0.
    clear p_file.
  else.
    concatenate p_file '.TXT' into p_file.
  endif.

endform.                    " f_get_f4_filename

*&---------------------------------------------------------------------*
*&      Form  f_initial_value
*&---------------------------------------------------------------------*
form f_initial_value.

  refresh: gt_mseg, gt_mara1, gt_lfa1, gt_data1, gt_report1, gt_output1,
           gt_rseg, gt_mara2, gt_ekpo, gt_data2, gt_report2, gt_output2,
           gt_datastm1, gt_datastm2,gt_output4.

  if rb_java = 'X'.
    gc_fname = gc_unixname.
  elseif rb_as400 = 'X'.
    gc_fname = gc_unixname2.
  elseif rb_mis = 'X'.
    concatenate s_budat+3(6) '01' into r_date_mis.
    replace 'YYYYMMDD' with r_date_mis
    into gs_unixname3.
    gc_fname = gs_unixname3.
  elseif rb_stm eq 'X'.
    gc_fname = gc_unixname4.
    case_stm = '1'.
  endif.

endform.                    " f_initial_value

*&---------------------------------------------------------------------*
*&      Form  f_get_data
*&---------------------------------------------------------------------*
form f_get_data.

  perform f_get_company.
  perform f_verify_date.

  if rb_java eq 'X' or rb_mis eq 'X' or rb_stm eq 'X'.       "For Memo Java
    perform f_range_value.
*   Get Material Document data
    if ra_da eq 'X'.
      perform get_material.
    endif.
    perform f_get_mseg.
*   Get Material Data
    perform f_get_mara1.
*   Get Vendor data
    perform f_get_lfa1.

  elseif rb_as400 eq 'X'.  "For AS/400 Lip 7-11
*   >>> BEGIN OF COMMENT-THEERSER 20090317
*    DATA: lv_sdate LIKE sy-datum,
*          lv_edate LIKE sy-datum.
* step 0 : define select value "INS-THEERSER 20080505
*    PERFORM define_start_end_date USING lv_sdate
*                                        lv_edate.
*   <<< END OF COMMENT-THEERSER 20090317
    perform defind_business_place.

* step 1 : select header document (BKPF)
    select bukrs belnr gjahr bktxt xblnr budat bldat
    into table i_bkpf
    from   bkpf
    where bukrs eq p_bukrs
      and gjahr eq p_period(4)
*      AND budat GE lv_sdate
*      AND budat LE lv_edate
      and budat in s_budat "EDIT-THEERSER 20090317
      and blart in ('RE','CK','KC').

* step 2 : select detail document (BSEG)
    if not i_bkpf[] is initial.
      select gjahr belnr bukrs buzei bupla lifnr
             buzid koart shkzg dmbtr zfbdt
             ebeln zuonr mwart sgtxt augdt
             augbl
      into table i_bseg
      from bseg
       for all entries in i_bkpf
      where bukrs = i_bkpf-bukrs
        and gjahr = i_bkpf-gjahr
        and belnr = i_bkpf-belnr
        and bupla in r_bupla.
    endif.


  endif.

endform.                    " f_get_data

*&---------------------------------------------------------------------*
*&      Form  f_get_company
*&---------------------------------------------------------------------*
form f_get_company.

  clear gs_t001.
  select bukrs butxt
    into gs_t001
    from t001
    where bukrs eq p_bukrs.
  endselect.

endform.                    " f_get_company

*&---------------------------------------------------------------------*
*&      Form  f_verify_date
*&---------------------------------------------------------------------*
form f_verify_date.

  data: lv_start    like sy-datum,
        lv_end      like sy-datum.



  clear: gv_month, gv_mjahr, lv_start, lv_end, gv_period,gv_day.
*  WRITE: p_period+0(4) TO gv_mjahr,
*         p_period+4(2) TO gv_month.
  write: s_budat-low+0(4) to gv_mjahr,
         s_budat-low+4(2) to gv_month,
         s_budat-low+6(2) to gv_day.
  concatenate: gv_mjahr gv_month '01' into lv_start,
               gv_month gv_mjahr into gv_period separated by '/'.

  check s_budat-low eq '00000000'."INS-THEERSER 20090317

  call function 'LAST_DAY_OF_MONTHS'
    exporting
      day_in            = lv_start
    importing
      last_day_of_month = lv_end
    exceptions
      day_in_no_date    = 1
      others            = 2.
  if sy-subrc eq 0.
    refresh s_budat.
    clear s_budat.
    s_budat-sign    = 'I'.
    s_budat-option  = 'BT'.
    s_budat-low     = lv_start.
    s_budat-high    = lv_end.
    append s_budat.
  endif.

endform.                    " f_verify_date

*&---------------------------------------------------------------------*
*&      Form  f_range_value
*&---------------------------------------------------------------------*
form f_range_value.

  m%fill_bwart: '101', '102', '122', '123', '959', '960'. "INS-SUCHAPOP 20150504 Mvt. 959-960

endform.                    " f_range_value

*&---------------------------------------------------------------------*
*&      Form  f_get_mseg
*&---------------------------------------------------------------------*
form f_get_mseg.

  if it_mat is not initial.
  select a~mblnr a~mjahr a~zeile a~bwart a~matnr a~werks a~lgort
         a~lifnr a~shkzg a~dmbtr a~menge a~bukrs b~budat a~exbwr  "INS-SUCHAPOP 20150504 Add Field EXBWR
    into table gt_mseg
    from mseg as a
    inner join mkpf as b
    on  a~mblnr eq b~mblnr
    and a~mjahr eq b~mjahr
    for all entries in it_mat
    where a~mjahr eq gv_mjahr
      and a~bwart in r_bwart
      and a~matnr eq it_mat-matnr
      and a~werks in s_werks
      and a~lgort in s_lgort
      and a~lifnr in s_lifnr
      and a~bukrs eq p_bukrs
      and b~budat in s_budat.
  else.
    select a~mblnr a~mjahr a~zeile a~bwart a~matnr a~werks a~lgort
           a~lifnr a~shkzg a~dmbtr a~menge a~bukrs b~budat a~exbwr  "INS-SUCHAPOP 20150504 Add Field EXBWR
      into table gt_mseg
      from mseg as a
      inner join mkpf as b
      on  a~mblnr eq b~mblnr
      and a~mjahr eq b~mjahr
      where a~mjahr eq gv_mjahr
        and a~bwart in r_bwart
        and a~matnr in s_matnr
        and a~werks in s_werks
        and a~lgort in s_lgort
        and a~lifnr in s_lifnr
        and a~bukrs eq p_bukrs
        and b~budat in s_budat.
  endif.

endform.                    " f_get_mseg

*&---------------------------------------------------------------------*
*&      Form  get_material
*&---------------------------------------------------------------------*
form get_material.
  data : lv_date like sy-datum.
  lv_date = sy-datum - 1.
  select * from zmm_mat_pur into table it_mat
    where bukrs eq p_bukrs
      and eftsd le lv_date
      and efted ge lv_date.

    sort it_mat by matnr.
endform.  "FORM get_material.

*&---------------------------------------------------------------------*
*&      Form  f_get_mara1
*&---------------------------------------------------------------------*
form f_get_mara1.

  if not gt_mseg[] is initial.
    select matnr matkl
      into table gt_mara1
      from mara
      for all entries in gt_mseg
      where matnr eq gt_mseg-matnr.
  endif.

endform.                    " f_get_mara1

*&---------------------------------------------------------------------*
*&      Form  f_get_lfa1
*&---------------------------------------------------------------------*
form f_get_lfa1.

  if not gt_mseg[] is initial.
    select a~lifnr a~adrnr b~name1 b~sort2
      into table gt_lfa1
      from lfa1 as a
      inner join adrc as b
      on a~adrnr eq b~addrnumber
      for all entries in gt_mseg
      where a~lifnr     eq gt_mseg-lifnr
        and b~date_from le sy-datum.
  endif.

endform.                    " f_get_lfa1

*&---------------------------------------------------------------------*
*&      Form  f_get_rseg
*&---------------------------------------------------------------------*
form f_get_rseg.

  select a~belnr a~gjahr a~buzei a~ebeln a~ebelp a~matnr a~bukrs
         a~werks a~shkzg a~menge a~meins a~xblnr b~budat b~lifnr
         b~rmwwr b~wmwst1
    into table gt_rseg
    from rseg as a
    inner join rbkp as b
    on  a~belnr eq b~belnr
    and a~gjahr eq b~gjahr
    where a~gjahr eq gv_mjahr
      and a~bukrs eq p_bukrs
      and a~matnr in s_matnr
      and a~werks in s_werks
      and b~budat in s_budat
      and b~lifnr in s_lifnr.
*      AND a~lgort IN s_lgort

endform.                    " f_get_rseg

*&---------------------------------------------------------------------*
*&      Form  f_get_mara2
*&---------------------------------------------------------------------*
form f_get_mara2.

  if not gt_rseg[] is initial.
    select matnr matkl
      into table gt_mara2
      from mara
      for all entries in gt_rseg
      where matnr eq gt_rseg-matnr.
  endif.

endform.                    " f_get_mara2

*&---------------------------------------------------------------------*
*&      Form  f_get_ekpo
*&---------------------------------------------------------------------*
form f_get_ekpo.

  if not gt_rseg[] is initial.
    select ebeln ebelp werks lgort bednr
      into table gt_ekpo
      from ekpo
      for all entries in gt_rseg
      where ebeln eq gt_rseg-ebeln
        and ebelp eq gt_rseg-ebelp
        and lgort in s_lgort.
  endif.

endform.                    " f_get_ekpo

*&---------------------------------------------------------------------*
*&      Form  f_process_data
*&---------------------------------------------------------------------*
form f_process_data.

  if rb_java eq 'X'.        "For Memo Java
    perform f_porcess_java.
  elseif rb_as400 eq 'X'.   "For AS/400 Lip 7-11
    perform f_porcess_as400_new.
  elseif rb_mis eq 'X'. " For Purchase MIS
    perform f_porcess_mis.
  elseif rb_stm eq 'X'. " For Purchase Stamp
    if case_stm = '1'.
      perform f_process_stm1.
      perform f_process_stm2.
    else.
      perform f_process_stm1.
    endif.
  endif.

endform.                    " f_process_data


*&---------------------------------------------------------------------*
*&      Form  f_porcess_java
*&---------------------------------------------------------------------*
form f_porcess_java.

  data: lt_data1  type table of ty_data1  with header line,
        ls_data1  type ty_data1.

    data: lt_data2  type table of ty_data1  with header line,
        ls_data2  type ty_data1.

  data: begin of ls_sum,
        dmbtr   type mseg-dmbtr,
        menge   type mseg-menge,
        end of ls_sum.

  sort: gt_mara1  by matnr,
        gt_lfa1  by lifnr.

  refresh lt_data1.
  clear: gt_mseg, lt_data1.
  loop at gt_mseg.

    clear gt_mara1.
    read table gt_mara1 with key matnr = gt_mseg-matnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_mara1-matnr  to lt_data1-matnr,
            gt_mara1-matkl  to lt_data1-matkl.
    endif.
    clear gt_lfa1.
    read table gt_lfa1 with key lifnr = gt_mseg-lifnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_lfa1-lifnr  to lt_data1-lifnr,
            gt_lfa1-adrnr  to lt_data1-adrnr,
            gt_lfa1-name1  to lt_data1-name1,
            gt_lfa1-sort2  to lt_data1-sort2.
    endif.
    move: gt_mseg-bukrs    to lt_data1-bukrs,
          gt_mseg-werks    to lt_data1-werks,
          gt_mseg-lifnr    to lt_data1-lifnr,
          gt_mseg-matnr    to lt_data1-matnr,
          gt_mseg-shkzg    to lt_data1-shkzg,
          gt_mseg-mblnr    to lt_data1-mblnr,
          gt_mseg-mjahr    to lt_data1-mjahr,
          gt_mseg-zeile    to lt_data1-zeile,
          gt_mseg-bwart    to lt_data1-bwart,
          gt_mseg-lgort    to lt_data1-lgort.
*--START OF INS-SUCHAPOP 20150504
    if gt_mseg-bwart eq '959' or gt_mseg-bwart eq '960'.
      if gt_mseg-exbwr is not initial.
        move gt_mseg-exbwr    to lt_data1-dmbtr.
      else.
        move gt_mseg-dmbtr    to lt_data1-dmbtr.
      endif.
    else.
      move gt_mseg-dmbtr    to lt_data1-dmbtr.
    endif.
*--END OF INS-SUCHAPOP 20150504
    move :gt_mseg-menge    to lt_data1-menge,
          gt_mseg-budat    to lt_data1-budat.
    append lt_data1.
    clear: gt_mseg, lt_data1.


  endloop.

* Summary Purchase for Memo Java
  sort lt_data1 by bukrs werks lifnr matnr shkzg.
  clear: lt_data1, gt_data1, ls_data1, ls_sum, gt_report1.

      "Edit By Rawisara T. 08/07/2020 date of daily out
  if ra_da eq 'X'.

    loop at lt_data1.
      ls_data1 = lt_data1.

        move-corresponding ls_data1 to gt_data1.
        call function 'ZMM_PRICE_C2RTL'
          exporting
            werks           = gt_data1-werks
            matnr           = gt_data1-matnr
            budat           = s_budat-high
            kostl           = gc_kostl
          importing
            price_rtl       = gt_data1-retail
          exceptions
            price_not_found = 1
            area_not_found  = 2
            others          = 3.
        if sy-subrc <> 0.
          clear gt_data1-retail.
        else.
          gt_data1-retail = gt_data1-menge * gt_data1-retail.
        endif.
        move gt_data1-matkl+3(2) to gt_data1-pma.
        append gt_data1.
        if gt_data1-shkzg eq 'S'.
          gt_report1-docty = '41'.
        else.
          gt_report1-docty = '43'.
        endif.
        move-corresponding gt_data1 to gt_report1.
        append gt_report1.
        clear: gt_data1, gt_report1.
      clear: lt_data1 , ls_data1.
    endloop.

  else.  " Monthly
    loop at lt_data1.
      ls_data1 = lt_data1.
      ls_sum-dmbtr = ls_sum-dmbtr + ls_data1-dmbtr.
      ls_sum-menge = ls_sum-menge + ls_data1-menge.
      at end of shkzg.
        move-corresponding ls_data1 to gt_data1.
        move: ls_sum-dmbtr to gt_data1-dmbtr,
              ls_sum-menge to gt_data1-menge.
        call function 'ZMM_PRICE_C2RTL'
          exporting
            werks           = gt_data1-werks
            matnr           = gt_data1-matnr
            budat           = s_budat-high
            kostl           = gc_kostl
          importing
            price_rtl       = gt_data1-retail
          exceptions
            price_not_found = 1
            area_not_found  = 2
            others          = 3.
        if sy-subrc <> 0.
          clear gt_data1-retail.
        else.
          gt_data1-retail = gt_data1-menge * gt_data1-retail.
        endif.
        move gt_data1-matkl+3(2) to gt_data1-pma.
        append gt_data1.
        if gt_data1-shkzg eq 'S'.
          gt_report1-docty = '41'.
        else.
          gt_report1-docty = '43'.
        endif.
        move-corresponding gt_data1 to gt_report1.
        append gt_report1.
        clear: gt_data1, gt_report1, ls_sum.
      endat.
      clear: lt_data1, ls_data1.
    endloop.
  endif.
endform.                    " f_porcess_java

*&---------------------------------------------------------------------*
*&      Form  f_porcess_as400
*&---------------------------------------------------------------------*
form f_porcess_as400.

  data: lt_data2  type table of ty_data2  with header line,
        ls_data2  type ty_data2,
        ls_total2 type ty_total2.

  data: begin of ls_date,
        day(2)    type c,
        month(2)  type c,
        year(4)   type c,
        end of ls_date.

  sort: gt_mara2  by matnr,
        gt_ekpo   by ebeln ebelp.

  refresh lt_data2.

  clear: gt_rseg, lt_data2.
  loop at gt_rseg.
    clear gt_ekpo.
    read table gt_ekpo with key ebeln = gt_rseg-ebeln
                                ebelp = gt_rseg-ebelp
                       binary search.
    if sy-subrc eq 0.
      clear gt_mara2.
      read table gt_mara2 with key matnr = gt_rseg-matnr
                         binary search.
      if sy-subrc eq 0.
        move: gt_mara2-matnr  to lt_data2-matnr,
              gt_mara2-matkl  to lt_data2-matkl.
      endif.
      move: gt_ekpo-bednr    to lt_data2-bednr,
            gt_rseg-bukrs    to lt_data2-bukrs,
            gt_rseg-werks    to lt_data2-werks,
            gt_rseg-belnr    to lt_data2-belnr,
            gt_rseg-gjahr    to lt_data2-gjahr,
            gt_rseg-buzei    to lt_data2-buzei,
            gt_rseg-ebeln    to lt_data2-ebeln,
            gt_rseg-ebelp    to lt_data2-ebelp,
            gt_rseg-shkzg    to lt_data2-shkzg,
            gt_rseg-menge    to lt_data2-menge,
            gt_rseg-meins    to lt_data2-meins,
            gt_rseg-xblnr    to lt_data2-xblnr,
            gt_rseg-budat    to lt_data2-budat,
            gt_rseg-lifnr    to lt_data2-lifnr,
            gt_rseg-rmwwr    to lt_data2-rmwwr,
            gt_rseg-wmwst1   to lt_data2-wmwst1.
      clear ls_date.
      move: lt_data2-budat+0(4)  to ls_date-year,
            lt_data2-budat+4(2)  to ls_date-month,
            lt_data2-budat+6(2)  to ls_date-day.
      concatenate ls_date-day ls_date-month ls_date-year
             into lt_data2-date separated by '/'.
      append lt_data2.
    endif.
    clear: gt_mseg, lt_data2.
  endloop.

* Summary Purchase for As/400 Lip 7-11
  sort lt_data2 by bukrs werks budat bednr matnr xblnr.
  clear: lt_data2, ls_data2, ls_total2.
  loop at lt_data2.
    ls_data2 = lt_data2.
    ls_total2-qty_dam = ls_total2-qty_dam + ls_data2-menge.
    ls_total2-rmwwr   = ls_total2-rmwwr + ls_data2-rmwwr.
    ls_total2-wmwst1  = ls_total2-wmwst1 + ls_data2-wmwst1.

    if ls_data2-shkzg eq 'S'.
      ls_total2-qty_rcv = ls_total2-qty_rcv + ls_data2-menge.
    endif.

    at end of xblnr.
      move-corresponding ls_data2 to gt_data2.
      if ls_total2-qty_dam eq ls_total2-qty_rcv.
        clear ls_total2-qty_dam.
      endif.
      move: ls_total2-qty_rcv  to gt_data2-qty_rcv,
            ls_total2-qty_dam  to gt_data2-qty_dam,
            ls_total2-rmwwr    to gt_data2-rmwwr,
            ls_total2-wmwst1   to gt_data2-wmwst1.
      append gt_data2.
      move: gt_data2-bukrs    to gt_report2-bukrs,
            gt_data2-werks    to gt_report2-werks,
            gt_data2-budat    to gt_report2-budat,
            gt_data2-bednr    to gt_report2-bednr,
            gt_data2-matnr    to gt_report2-matnr,
            gt_data2-qty_rcv  to gt_report2-qty_rcv,
            gt_data2-qty_dam  to gt_report2-qty_dam,
            gt_data2-meins    to gt_report2-meins,
            gt_data2-xblnr    to gt_report2-xblnr,
            gt_data2-rmwwr    to gt_report2-rmwwr,
            gt_data2-wmwst1   to gt_report2-wmwst1,
            gt_data2-date     to gt_report2-date.
      append gt_report2.
      clear: gt_data2, gt_report2, ls_total2.
    endat.

    clear: lt_data2, ls_data2.
  endloop.

endform.                    " f_porcess_as400
*&---------------------------------------------------------------------*
*&      Form  f_porcess_mis
*&---------------------------------------------------------------------*
form f_porcess_mis.

  data: lt_data1  type table of ty_data1  with header line,
        ls_data1  type ty_data1.

  data: begin of ls_sum,
        dmbtr   type mseg-dmbtr,
        menge   type mseg-menge,
        end of ls_sum.

  sort: gt_mara1  by matnr,
        gt_lfa1  by lifnr.

  refresh lt_data1.
  clear: gt_mseg, lt_data1.
  loop at gt_mseg.
    clear gt_mara1.
    read table gt_mara1 with key matnr = gt_mseg-matnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_mara1-matnr  to lt_data1-matnr,
            gt_mara1-matkl  to lt_data1-matkl.
    endif.
    clear gt_lfa1.
    read table gt_lfa1 with key lifnr = gt_mseg-lifnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_lfa1-lifnr  to lt_data1-lifnr,
            gt_lfa1-adrnr  to lt_data1-adrnr,
            gt_lfa1-name1  to lt_data1-name1,
            gt_lfa1-sort2  to lt_data1-sort2.
    endif.
    move: gt_mseg-bukrs    to lt_data1-bukrs,
          gt_mseg-werks    to lt_data1-werks,
          gt_mseg-lifnr    to lt_data1-lifnr,
          gt_mseg-matnr    to lt_data1-matnr,
          gt_mseg-shkzg    to lt_data1-shkzg,
          gt_mseg-mblnr    to lt_data1-mblnr,
          gt_mseg-mjahr    to lt_data1-mjahr,
          gt_mseg-zeile    to lt_data1-zeile,
          gt_mseg-bwart    to lt_data1-bwart,
          gt_mseg-lgort    to lt_data1-lgort.

*---------NUT Modify Check Credit/Debit-------------*
    if lt_data1-shkzg eq 'H'.
      gt_mseg-exbwr = gt_mseg-exbwr * -1.
      gt_mseg-dmbtr = gt_mseg-dmbtr * -1.
      gt_mseg-menge = gt_mseg-menge * -1.
    else.
      "DO NOTHING"
    endif.
    if rb_mis eq 'X'.
      lt_data1-shkzg = ''.
    endif.
*---------------------------------------------------*
*--START OF INS-SUCHAPOP 20150504
    if gt_mseg-bwart eq '959' or gt_mseg-bwart eq '960'.
      if gt_mseg-exbwr is not initial.
        move gt_mseg-exbwr    to lt_data1-dmbtr.
      else.
        move gt_mseg-dmbtr    to lt_data1-dmbtr.
      endif.
    else.
      move gt_mseg-dmbtr    to lt_data1-dmbtr.
    endif.
*--END OF INS-SUCHAPOP 20150504
    move :gt_mseg-menge    to lt_data1-menge,
          gt_mseg-budat    to lt_data1-budat.
    collect lt_data1.
    clear: gt_mseg, lt_data1.
  endloop.

* Summary Purchase for Memo Java
  sort lt_data1 by bukrs werks lifnr matnr shkzg.
  clear: lt_data1, gt_data1, ls_data1, ls_sum, gt_report1.
  loop at lt_data1.
    ls_data1 = lt_data1.
    ls_sum-dmbtr = ls_sum-dmbtr + ls_data1-dmbtr.
    ls_sum-menge = ls_sum-menge + ls_data1-menge.
    at end of shkzg.
      move-corresponding ls_data1 to gt_data1.
      move: ls_sum-dmbtr to gt_data1-dmbtr,
            ls_sum-menge to gt_data1-menge.
      call function 'ZMM_PRICE_C2RTL'
        exporting
          werks           = gt_data1-werks
          matnr           = gt_data1-matnr
          budat           = s_budat-high
          kostl           = gc_kostl
        importing
          price_rtl       = gt_data1-retail
        exceptions
          price_not_found = 1
          area_not_found  = 2
          others          = 3.
      if sy-subrc <> 0.
        clear gt_data1-retail.
      else.
        gt_data1-retail = gt_data1-menge * gt_data1-retail.
      endif.
      move gt_data1-matkl+3(2) to gt_data1-pma.
      collect gt_data1.
      gt_report1-docty = ''.
      move-corresponding gt_data1 to gt_report1.
      collect gt_report1.
      clear: gt_data1, gt_report1, ls_sum.
    endat.
    clear: lt_data1, ls_data1.
  endloop.

endform.                    " f_porcess_mis

*&---------------------------------------------------------------------*
*&      Form  f_write_report
*&---------------------------------------------------------------------*
form f_write_report.
  if rb_java eq 'X' or rb_mis eq 'X'.        "For Memo Java
    if not gt_report1[] is initial.
      perform f_write_java.
    else.
      message e000 with text-014.
    endif.
  elseif rb_as400 eq 'X'.   "For AS/400 Lip 7-11
    if not gt_report2n[] is initial.
      perform f_write_as400_new.
    else.
      message e000 with text-014.
    endif.

  elseif rb_stm eq 'X'.
    if not gt_report1[] is initial.
      perform f_write_java.
    else.
      message e000 with text-014.
    endif.

  endif.

endform.                    " f_write_report

*&---------------------------------------------------------------------*
*&      Form  f_write_java
*&---------------------------------------------------------------------*
form f_write_java.

  data: ls_report1   type ty_report1,
        ls_lifnr     type ty_total1,
        ls_werks     type ty_total1,
        ls_period    type ty_total1,
        lv_lifnr     type mseg-lifnr,
        lv_lifnrtxt  type adrc-name1,
        lv_werkstxt  type adrc-name1,
        lv_periodtxt type adrc-name1.

  perform f_calculate_offset1.

  sort gt_report1 by bukrs werks lifnr sort2 pma matnr.
  clear: gt_report1, ls_report1, ls_lifnr, ls_werks, ls_period.
  loop at gt_report1.
    ls_report1 = gt_report1.
    ls_lifnr-menge   = ls_lifnr-menge  + ls_report1-menge.
    ls_lifnr-dmbtr   = ls_lifnr-dmbtr  + ls_report1-dmbtr.
    ls_lifnr-retail  = ls_lifnr-retail + ls_report1-retail.
    ls_werks-menge   = ls_werks-menge  + ls_report1-menge.
    ls_werks-dmbtr   = ls_werks-dmbtr  + ls_report1-dmbtr.
    ls_werks-retail  = ls_werks-retail + ls_report1-retail.
    ls_period-menge  = ls_period-menge  + ls_report1-menge.
    ls_period-dmbtr  = ls_period-dmbtr  + ls_report1-dmbtr.
    ls_period-retail = ls_period-retail + ls_report1-retail.

    new-line.

    at new werks.
      clear gv_werks.
      gv_werks = ls_report1-werks.
      new-page.
    endat.

    at new sort2.
      write at: gs_calc1-offset02(gs_calc1-col02) ls_report1-lifnr,
                gs_calc1-offset03(gs_calc1-col03) ls_report1-name1,
                gs_calc1-offset04(gs_calc1-col04) ls_report1-sort2.
    endat.

    write at: gs_calc1-offset05(gs_calc1-col05) ls_report1-pma
                                                centered,
              gs_calc1-offset06(gs_calc1-col06) ls_report1-matnr
                                                no-zero,
              gs_calc1-offset07(gs_calc1-col07) ls_report1-docty
                                                centered,
              gs_calc1-offset08(gs_calc1-col08) ls_report1-menge
                                                decimals 0,
              gs_calc1-offset09(gs_calc1-col09) ls_report1-dmbtr
                                                decimals 2,
              gs_calc1-offset10(gs_calc1-col10) ls_report1-retail
                                                decimals 2.

    at end of lifnr.
      write at: /1(gs_calc1-offlast) sy-uline.
      clear: lv_lifnr, lv_lifnrtxt.
      pack ls_report1-lifnr to lv_lifnr.
      condense lv_lifnr no-gaps.
      concatenate text-h11 lv_lifnr
             into lv_lifnrtxt separated by space.
      write at: /gs_calc1-offset03(gs_calc1-col03) lv_lifnrtxt
                                                   right-justified,
                 gs_calc1-offset08(gs_calc1-col08) ls_lifnr-menge
                                                   decimals 0,
                 gs_calc1-offset09(gs_calc1-col09) ls_lifnr-dmbtr
                                                   decimals 2,
                 gs_calc1-offset10(gs_calc1-col10) ls_lifnr-retail
                                                   decimals 2.
      write at: /1(gs_calc1-offlast) sy-uline.
      clear ls_lifnr.
    endat.

    at end of werks.
      write at: /1(gs_calc1-offlast) sy-uline.
      clear: lv_werkstxt.
      concatenate text-h12 ls_report1-werks
             into lv_werkstxt separated by space.
      write at: /gs_calc1-offset03(gs_calc1-col03) lv_werkstxt,
                 gs_calc1-offset08(gs_calc1-col08) ls_werks-menge
                                                   decimals 0,
                 gs_calc1-offset09(gs_calc1-col09) ls_werks-dmbtr
                                                   decimals 2,
                 gs_calc1-offset10(gs_calc1-col10) ls_werks-retail
                                                   decimals 2.
      write at: /1(gs_calc1-offlast) sy-uline.
      clear ls_werks.
    endat.

    at last.
      clear lv_periodtxt.
      concatenate text-h13 gv_period
             into lv_periodtxt separated by space.
      write at: /1(gs_calc1-offlast) sy-uline.
      write at: /gs_calc1-offset03(gs_calc1-col03) lv_periodtxt,
                 gs_calc1-offset08(gs_calc1-col08) ls_period-menge
                                                   decimals 0,
                 gs_calc1-offset09(gs_calc1-col09) ls_period-dmbtr
                                                   decimals 2,
                 gs_calc1-offset10(gs_calc1-col10) ls_period-retail
                                                   decimals 2.
      write at: /1(gs_calc1-offlast) sy-uline.
      clear ls_period.
    endat.

    clear: gt_report1, ls_report1.
  endloop.

endform.                    " f_write_java

*&---------------------------------------------------------------------*
*&      Form  f_write_as400
*&---------------------------------------------------------------------*
form f_write_as400.

  data: ls_report2        type ty_report2,
        ls_budat          type ty_total2,
        ls_werks          type ty_total2,
        ls_period         type ty_total2,
        lv_budattxt(50)   type c,
        lv_werkstxt(50)   type c,
        lv_periodtxt(50)  type c.

  perform f_calculate_offset2.

  sort gt_report2 by bukrs werks budat bednr matnr xblnr.
  clear: gt_report2, ls_report2, ls_budat, ls_werks, ls_period.
  loop at gt_report2.
    ls_report2 = gt_report2.
    ls_budat-rmwwr   = ls_budat-rmwwr  + ls_report2-rmwwr.
    ls_budat-wmwst1  = ls_budat-wmwst1 + ls_report2-wmwst1.
    ls_werks-rmwwr   = ls_werks-rmwwr  + ls_report2-rmwwr.
    ls_werks-wmwst1  = ls_werks-wmwst1 + ls_report2-wmwst1.
    ls_period-rmwwr  = ls_budat-rmwwr  + ls_report2-rmwwr.
    ls_period-wmwst1 = ls_budat-wmwst1 + ls_report2-wmwst1.

    new-line.

    at new budat.
      write at: gs_calc2-offset01(gs_calc2-col01) ls_report2-werks
                                                  centered,
                gs_calc2-offset02(gs_calc2-col02) ls_report2-date
                                                  centered.
    endat.

    write at: gs_calc2-offset03(gs_calc2-col03) ls_report2-bednr
                                                no-zero,
              gs_calc2-offset04(gs_calc2-col04) ls_report2-matnr
                                                no-zero,
              gs_calc2-offset05(gs_calc2-col05) ls_report2-xblnr
                                                no-zero,
              gs_calc2-offset06(gs_calc2-col06) ls_report2-qty_rcv
                                                decimals 0,
              gs_calc2-offset07(gs_calc2-col07) ls_report2-qty_dam
                                                decimals 0,
              gs_calc2-offset08(gs_calc2-col08) ls_report2-rmwwr
                                                decimals 2,
              gs_calc2-offset09(gs_calc2-col09) ls_report2-wmwst1
                                                decimals 2.

    at end of budat.
      clear: lv_budattxt.
      concatenate text-h12 ls_report2-werks text-h14 ls_report2-date
              into lv_budattxt separated by space.
      write at: /1(gs_calc2-offlast) sy-uline.
      write at: /gs_calc2-offset03(50) lv_budattxt,
                 gs_calc2-offset08(gs_calc2-col08) ls_budat-rmwwr
                                                   decimals 2,
                 gs_calc2-offset09(gs_calc2-col09) ls_budat-wmwst1
                                                   decimals 2.
      write at: /1(gs_calc2-offlast) sy-uline.
      clear ls_budat.
    endat.

    at end of werks.
      clear: lv_werkstxt.
      concatenate text-h12 ls_report2-werks
             into lv_werkstxt separated by space.
      write at: /1(gs_calc2-offlast) sy-uline.
      write at: /gs_calc2-offset03(50) lv_werkstxt,
                 gs_calc2-offset08(gs_calc2-col08) ls_werks-rmwwr
                                                   decimals 2,
                 gs_calc2-offset09(gs_calc2-col09) ls_werks-wmwst1
                                                   decimals 2.
      write at: /1(gs_calc2-offlast) sy-uline.
      clear ls_werks.
    endat.

    at last.
      clear: lv_periodtxt.
      concatenate text-h13 gv_period
             into lv_periodtxt separated by space.
      write at: /1(gs_calc2-offlast) sy-uline.
      write at: /gs_calc2-offset03(50) lv_periodtxt,
                 gs_calc2-offset08(gs_calc2-col08) ls_period-rmwwr
                                                   decimals 2,
                 gs_calc2-offset09(gs_calc2-col09) ls_period-wmwst1
                                                   decimals 2.
      write at: /1(gs_calc2-offlast) sy-uline.
      clear ls_period.
    endat.

    clear: gt_report2, ls_report2.

  endloop.


endform.                    " f_write_as400

*&---------------------------------------------------------------------*
*&      Form  f_write_toppage
*&---------------------------------------------------------------------*
form f_write_toppage.

  data lv_text(14)  type c.

  concatenate text-012 gv_period
         into lv_text separated by space.

  if rb_java eq 'X' or rb_mis eq 'X'.       "For Memo Java OR For Purchase MIS
    call function 'Z_HEADER'
      exporting
        left1   = gs_t001-butxt
        center1 = sy-title
        center2 = lv_text.
    skip.
    write at: /1 text-h01,
               7 gv_werks.

  elseif rb_as400 eq 'X'.  "For AS/400 Lip 7-11
    call function 'Z_HEADER'
      exporting
        left1   = gs_t001-butxt
        center1 = sy-title
        center2 = lv_text
        no_line = 'X'.
    skip.
  endif.



endform.                    " f_write_toppage
*&---------------------------------------------------------------------*
*&      Form  f_write_headcolumn
*&---------------------------------------------------------------------*
form f_write_headcolumn.

  if rb_java eq 'X' or rb_mis eq 'X'.       "For Memo Java OR For Purchase MIS
    perform f_headcolumn_java.
  elseif rb_as400 eq 'X'.  "For AS/400 Lip 7-11
*    PERFORM f_headcolumn_as400.
  endif.

endform.                    " f_write_headcolumn

*&---------------------------------------------------------------------*
*&      Form  f_headcolumn_java
*&---------------------------------------------------------------------*
form f_headcolumn_java.

  perform f_calculate_offset1.

  write at: /1(gs_calc1-offlast) sy-uline.
  write at: /gs_calc1-offset01(gs_calc1-col01) space,
             gs_calc1-offset02(gs_calc1-col02) text-h02 centered,
             gs_calc1-offset03(gs_calc1-col03) text-h03 centered,
             gs_calc1-offset04(gs_calc1-col04) text-h04 centered,
             gs_calc1-offset05(gs_calc1-col05) text-h05 centered,
             gs_calc1-offset06(gs_calc1-col06) text-h06 centered,
             gs_calc1-offset07(gs_calc1-col07) text-h21 centered,
             gs_calc1-offset08(gs_calc1-col08) text-h07 right-justified,
             gs_calc1-offset09(gs_calc1-col09) text-h08 right-justified,
             gs_calc1-offset10(gs_calc1-col10) text-h09 right-justified,
             gs_calc1-offset11(gs_calc1-col11) text-h10 centered.
  write at: /1(gs_calc1-offlast) sy-uline.


endform.                    " f_headcolumn_java

*&---------------------------------------------------------------------*
*&      Form  f_headcolumn_as400
*&---------------------------------------------------------------------*
form f_headcolumn_as400.

  perform f_calculate_offset2.

  write at: /1(gs_calc2-offlast) sy-uline.
  write at: /gs_calc2-offset01(gs_calc2-col01) text-h01 centered,
             gs_calc2-offset02(gs_calc2-col02) text-h14 centered,
             gs_calc2-offset03(gs_calc2-col03) text-h15 centered,
             gs_calc2-offset04(gs_calc2-col04) text-h06 centered,
             gs_calc2-offset05(gs_calc2-col05) text-h16 centered,
             gs_calc2-offset06(gs_calc2-col06) text-h17 right-justified,
             gs_calc2-offset07(gs_calc2-col07) text-h18 right-justified,
             gs_calc2-offset08(gs_calc2-col08) text-h19 right-justified,
             gs_calc2-offset09(gs_calc2-col09) text-h20 right-justified.
  write at: /1(gs_calc2-offlast) sy-uline.

endform.                    " f_headcolumn_as400

*&---------------------------------------------------------------------*
*&      Form  f_calculate_offset1
*&---------------------------------------------------------------------*
form f_calculate_offset1.

  gs_calc1-total_col = 11.
  gs_calc1-col01 = 3.     "Seq.
  gs_calc1-col02 = 10.    "Vendor
  gs_calc1-col03 = 40.    "Vendor name
  gs_calc1-col04 = 20.                                      "Sterm2
  gs_calc1-col05 = 3.     "PMA
  gs_calc1-col06 = 10.    "Product Code
  gs_calc1-col07 = 8.     "Doc.Type
  gs_calc1-col08 = 14.    "Quantity
  gs_calc1-col09 = 21.    "Cost
  gs_calc1-col10 = 21.    "Retail
  gs_calc1-col11 = 11.    "Order Group

  call function 'ZBC_OFFSET_CALCULATION'
    exporting
      p_space       = 2
      p_col         = gs_calc1-total_col
      p_col01_width = gs_calc1-col01
      p_col02_width = gs_calc1-col02
      p_col03_width = gs_calc1-col03
      p_col04_width = gs_calc1-col04
      p_col05_width = gs_calc1-col05
      p_col06_width = gs_calc1-col06
      p_col07_width = gs_calc1-col07
      p_col08_width = gs_calc1-col08
      p_col09_width = gs_calc1-col09
      p_col10_width = gs_calc1-col10
      p_col11_width = gs_calc1-col11
    importing
      p_offlast     = gs_calc1-offlast
      p_offset01    = gs_calc1-offset01
      p_offset02    = gs_calc1-offset02
      p_offset03    = gs_calc1-offset03
      p_offset04    = gs_calc1-offset04
      p_offset05    = gs_calc1-offset05
      p_offset06    = gs_calc1-offset06
      p_offset07    = gs_calc1-offset07
      p_offset08    = gs_calc1-offset08
      p_offset09    = gs_calc1-offset09
      p_offset10    = gs_calc1-offset10
      p_offset11    = gs_calc1-offset11
    exceptions
      exceed_limit  = 1
      others        = 2.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  endif.

endform.                    " f_calculate_offset1

*&---------------------------------------------------------------------*
*&      Form  f_calculate_offset2
*&---------------------------------------------------------------------*
form f_calculate_offset2.

  gs_calc2-total_col = 9.
  gs_calc2-col01 = 9.     "Plant
  gs_calc2-col02 = 12.    "Posting Date
  gs_calc2-col03 = 12.                                      "PO AS/400
  gs_calc2-col04 = 12.    "Product Code
  gs_calc2-col05 = 12.    "Refereence
  gs_calc2-col06 = 16.    "Qty Recieve
  gs_calc2-col07 = 16.    "Qty Damage
  gs_calc2-col08 = 24.    "Inv. Amount
  gs_calc2-col09 = 24.    "VAT Amount

  call function 'ZBC_OFFSET_CALCULATION'
    exporting
      p_space       = 5
      p_col         = gs_calc2-total_col
      p_col01_width = gs_calc2-col01
      p_col02_width = gs_calc2-col02
      p_col03_width = gs_calc2-col03
      p_col04_width = gs_calc2-col04
      p_col05_width = gs_calc2-col05
      p_col06_width = gs_calc2-col06
      p_col07_width = gs_calc2-col07
      p_col08_width = gs_calc2-col08
      p_col09_width = gs_calc2-col09
      p_col10_width = gs_calc2-col10
    importing
      p_offlast     = gs_calc2-offlast
      p_offset01    = gs_calc2-offset01
      p_offset02    = gs_calc2-offset02
      p_offset03    = gs_calc2-offset03
      p_offset04    = gs_calc2-offset04
      p_offset05    = gs_calc2-offset05
      p_offset06    = gs_calc2-offset06
      p_offset07    = gs_calc2-offset07
      p_offset08    = gs_calc2-offset08
      p_offset09    = gs_calc2-offset09
      p_offset10    = gs_calc2-offset10
    exceptions
      exceed_limit  = 1
      others        = 2.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  endif.

endform.                    " f_calculate_offset2

*&---------------------------------------------------------------------*
*&      Form  f_output_data
*&---------------------------------------------------------------------*
form f_output_data.

  if rb_java eq 'X'.       "For Memo Java
    perform f_output_java.
  elseif rb_as400 eq 'X'.  "For AS/400 Lip 7-11
    perform f_output_as400_new.
  elseif rb_mis eq 'X'. "For Purchase MIS
    perform f_output_mis.
  elseif rb_stm eq 'X'. "For Stamp 12/10/2018
    perform f_output_stm1.
  endif.

* Export file
  if not gt_export[] is initial.
    if rb_unix eq 'X'.
      perform f_export_unix.
    else.
      perform f_export_local using 'PURJV_PART1.TXT'.
    endif.
  endif.

  if case_stm eq '1'.
      perform f_output_stm2.
      refresh gt_export.
      gt_export = gt_export2.
      append gt_export.
       if rb_unix eq 'X'.
         perform f_export_unix2.
       else.
         perform f_export_local  using 'PURJV_PART2.TXT'.
       endif.

  endif.
endform.                    " f_output_data

*&---------------------------------------------------------------------*
*&      Form  f_output_java
*&---------------------------------------------------------------------*
form f_output_java.

  data: lv_yearth(4)  type n,
        lv_year(2)    type c,
        lv_period     type ty_output1-period,
        lv_dmbtr      type ty_output1-cost,
        lv_menge      type ty_output1-quan,
        lv_int(14)    type c,
        lv_point(2)   type c,
        lv_lgort(4)    type c.

  clear: lv_yearth, lv_year, lv_period.
  lv_yearth = gv_mjahr.
  lv_yearth = lv_yearth + 543.
  write lv_yearth+2(2) to lv_year.

  concatenate lv_year gv_month into lv_period.

  sort gt_data1 by bukrs werks lifnr matnr shkzg budat.
  clear: gt_data1, gt_output1.
  loop at gt_data1.

    "Edit By Rawisara T. 08/07/2020 date of daily out
    if ra_da eq 'X' and cb_pipe eq 'X'.
      concatenate lv_year gv_month gt_data1-budat+6(2) into lv_period.
    endif.
**** Start Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
*    CASE gt_data1-werks.
*      WHEN '0104'.
*        gt_output1-plant = 'W101'.
*      WHEN '0105'.
*        gt_output1-plant = 'W501'.
*      WHEN '0106'.
*        gt_output1-plant = 'W201'.
*      WHEN '0107'.
*        gt_output1-plant = 'W111'.
*    ENDCASE.
**** Finis Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
**** Start Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

    move : gt_data1-lgort to lv_lgort. "INS THINNMAS 06032012


    call function 'ZMM_WH_EXCEED_SAP'
     exporting
*       im_zwhid       =
       im_werks       = gt_data1-werks
       im_lgort       = lv_lgort  "INS THINNMAS 06032012
     importing
*   EX_WERKS       =
       ex_lgort       = gt_output1-plant
*   EX_INSMK       =
*   ex_zwhid       =
*   EX_DISCT       =
*   EX_SHPWH       =
              .
**** Finis Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

*--INS THINNMAS 06032012 GO:0166 WTS
    if gt_output1-plant = 'WM01' and gt_output1-plant ne lv_lgort.
      gt_output1-plant = lv_lgort.
    endif.
*--END THINNMAS 06032012 GO:0166 WTS

*--INS THINNMAS 06042012 WTS สำโรง
    if gt_output1-plant = 'WM10' and gt_output1-plant ne lv_lgort.
      gt_output1-plant = lv_lgort.
    endif.
*--END THINNMAS 06042012 WTS สำโรง

*--INS THINNMAS 02042013 WTS มหาชัย
    if gt_output1-plant = 'WM30' and gt_output1-plant ne lv_lgort.
      gt_output1-plant = lv_lgort.
    endif.
*--END THINNMAS 02042013 WTS มหาชัย

    if gt_data1-shkzg eq 'S'.
      gt_output1-docty = '41'.
    else.
      gt_output1-docty = '43'.
    endif.

    move gt_data1-matnr+11(7) to gt_output1-prod.

    lv_menge = gt_data1-menge.
    move lv_menge+0(11)   to gt_output1-quan.
    unpack gt_output1-quan to gt_output1-quan.

    lv_dmbtr = gt_data1-dmbtr.
    clear: lv_int, lv_point.
    move: lv_dmbtr+0(12)  to lv_int,
          lv_dmbtr+13(2)  to lv_point.
    unpack lv_int to lv_int.
    concatenate lv_int lv_point into gt_output1-cost.

    lv_dmbtr = gt_data1-retail.
    clear: lv_int, lv_point.
    move: lv_dmbtr+0(12)  to lv_int,
          lv_dmbtr+13(2)  to lv_point.
    unpack lv_int to lv_int.
    concatenate lv_int lv_point into gt_output1-retail.

    unpack: gt_output1-filler1 to gt_output1-filler1,
            gt_output1-filler2 to gt_output1-filler2,
            gt_output1-filler3 to gt_output1-filler3.

    move: lv_period       to  gt_output1-period,
          gt_data1-sort2  to  gt_output1-vendor,
          gt_data1-pma    to  gt_output1-pma.
    append gt_output1.
    clear: gt_data1, gt_output1, lv_lgort.
  endloop.

* Prepare Text File

*--START OF INS-SUCHAPOP 20140626
*IF cb_pipe EQ 'X'.
*    CLEAR: gt_output1, gt_export.
*  LOOP AT gt_output1.
*    CONCATENATE gt_output1-period gt_output1-plant gt_output1-vendor gt_output1-pma
*                gt_output1-prod gt_output1-docty gt_output1-filler1 gt_output1-quan
*                gt_output1-filler2 gt_output1-cost gt_output1-filler3 gt_output1-retail
*                gt_output1-order INTO gt_export-text SEPARATED BY '|'.
*
*    APPEND gt_export.
*    CLEAR: gt_output1, gt_export.
*  ENDLOOP.

  if cb_pipe eq 'X'.
    clear: gt_output1, gt_export.
    loop at gt_output1.
      concatenate gt_output1-period gt_output1-plant gt_output1-vendor gt_output1-pma
                  gt_output1-prod gt_output1-docty gt_output1-quan
                  gt_output1-cost gt_output1-retail
                  into gt_export-text separated by '|'.

      append gt_export.
      clear: gt_output1, gt_export.
    endloop.
  else.
*--END OF INS-SUCHAPOP 20140626

*--START OF INS-SUCHAPOP 20140630
*--INS OF INS-SUCHAPOP 20150114
    clear: gt_output1, gt_export.
    loop at gt_output1.
      gt_export-text(4)      = gt_output1-period.
      gt_export-text+4(4)    = gt_output1-plant.
      gt_export-text+8(7)    = gt_output1-vendor.
      gt_export-text+15(2)   = gt_output1-pma.
      gt_export-text+17(12)  = gt_output1-prod.
      gt_export-text+29(2)   = gt_output1-docty.
      gt_export-text+31(13)  = gt_output1-filler1.
      gt_export-text+44(16)  = gt_output1-quan.
      gt_export-text+60(17)  = gt_output1-filler2.
      gt_export-text+77(16)  = gt_output1-cost.
      gt_export-text+93(15)  = gt_output1-filler3.
      gt_export-text+108(16) = gt_output1-retail.
      gt_export-text+124(10) = gt_output1-order.
      append gt_export.
      clear: gt_output1, gt_export.
    endloop.
*--END OF INS-SUCHAPOP 20150114
*--END OF INS-SUCHAPOP 20140630

*--INS OF INS-SUCHAPOP 20150114
*    CLEAR: gt_output1, gt_export.
*  LOOP AT gt_output1.
*    gt_export-text(4)      = gt_output1-period.
*    gt_export-text+4(4)    = gt_output1-plant.
*    gt_export-text+8(7)    = gt_output1-vendor.
*    gt_export-text+15(2)   = gt_output1-pma.
*    gt_export-text+17(12)  = gt_output1-prod.
*    gt_export-text+29(2)   = gt_output1-docty.
**    gt_export-text+31(13)  = gt_output1-filler1.
*    gt_export-text+31(16)  = gt_output1-quan.
**    gt_export-text+60(17)  = gt_output1-filler2.
*    gt_export-text+47(16)  = gt_output1-cost.
**    gt_export-text+93(15)  = gt_output1-filler3.
*    gt_export-text+63(16) = gt_output1-retail.
*    gt_export-text+79(10) = gt_output1-order.
*    APPEND gt_export.
*    CLEAR: gt_output1, gt_export.
*  ENDLOOP.
*--END OF INS-SUCHAPOP 20150114

  endif.  "INS-SUCHAPOP 20140626

endform.                    " f_output_java

*&---------------------------------------------------------------------*
*&      Form  f_output_as400
*&---------------------------------------------------------------------*
form f_output_as400.

  data: lv_inv_amt(16)  type c,
        lv_vat_amt(16)  type c,
        lv_menge(16)    type c,
        lv_inv_int(11)  type c,
        lv_vat_int(9)   type c,
        lv_point(2)     type c,
        lv_tmp(7)       type c,
        lv_lgort2(4)    type c.

  data: begin of ls_footer,
        line          type i,
        sum           type i,
        line_txt(7)   type c,
        sum_txt(15)   type c,
        end of ls_footer.

  sort gt_data2 by bukrs werks budat bednr matnr xblnr.
  clear: gt_data2, gt_output2.
  loop at gt_data2.
**** Start Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
*    CASE gt_data2-werks.
*      WHEN '0104'.
*        gt_output2-plant = '0101'.
*      WHEN '0105'.
*        gt_output2-plant = '0501'.
*      WHEN '0106'.
*        gt_output2-plant = '0201'.
*      WHEN '0107'.
*        gt_output2-plant = '0111'.
*    ENDCASE.
**** Finis Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
**** Start Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

    call function 'ZMM_WH_EXCEED_SAP'
     exporting
*       IM_ZWHID       =
       im_werks       = gt_data2-werks
*   IM_LGORT       =
     importing
*   EX_WERKS       =
*   EX_LGORT       =
*   EX_INSMK       =
       ex_zwhid       = gt_output2-plant
*   EX_DISCT       =
*   EX_SHPWH       =
              .
**** Finis Insert 13 Lines by wuttitho 20090804 RDC Surat Project****


    unpack: gt_output2-recp      to gt_output2-recp,
            gt_output2-catch     to gt_output2-catch,
            gt_output2-cost      to gt_output2-cost,
            gt_output2-flow_qty  to gt_output2-flow_qty,
            lv_tmp               to lv_tmp.

    concatenate: gt_data2-date gc_time into gt_output2-datetime,
                 '+' lv_tmp            into gt_output2-qty_over.

    write: gt_data2-bednr       to  gt_output2-trackno right-justified,
           gt_data2-matnr+11(7) to gt_output2-prod     right-justified.

    clear lv_menge.
    lv_menge = gt_data2-qty_rcv.
    move lv_menge+4(7)  to gt_output2-qty_rcv.
    unpack gt_output2-qty_rcv to gt_output2-qty_rcv.

    clear lv_menge.
    lv_menge = gt_data2-qty_dam.
    move lv_menge+4(7)  to gt_output2-qty_dam.
    unpack gt_output2-qty_dam to gt_output2-qty_dam.

    clear: lv_inv_amt, lv_inv_int, lv_point.
    lv_inv_amt = gt_data2-rmwwr.
    move: lv_inv_amt+1(11)  to lv_inv_int,
          lv_inv_amt+13(2)  to lv_point.
    unpack lv_inv_int to lv_inv_int.
    concatenate lv_inv_int lv_point into gt_output2-inv_amt.

    clear: lv_vat_amt, lv_vat_int, lv_point.
    lv_vat_amt = gt_data2-wmwst1.
    move: lv_vat_amt+3(9)   to lv_vat_int,
          lv_vat_amt+13(2)  to lv_point.
    unpack lv_vat_int to lv_vat_int.
    concatenate lv_vat_int lv_point into gt_output2-vat_amt.

    move: gc_jobs              to gt_output2-jobs,
          gt_data2-date        to gt_output2-date,
          gt_data2-xblnr       to gt_output2-inv_ref,
          'S'                  to gt_output2-sy_flag,
          'N'                  to gt_output2-flow_flag,
          'N'                  to gt_output2-gen_flow,
          '1'                  to gt_output2-unit_ship.
    append gt_output2.
    clear: gt_data2, gt_output2.
  endloop.

  clear ls_footer.
  describe table gt_output2 lines ls_footer-line.
  ls_footer-sum = ls_footer-line * 1010.
  unpack: ls_footer-line to ls_footer-line_txt,
          ls_footer-sum  to ls_footer-sum_txt.

* Prepare Text File
  clear: gt_output2, gt_export.
  loop at gt_output2.
    gt_export-text(4)      = gt_output2-jobs.
    gt_export-text+4(4)    = gt_output2-plant.
    gt_export-text+8(18)   = gt_output2-datetime.
    gt_export-text+26(18)  = gt_output2-trackno.
    gt_export-text+44(5)   = gt_output2-recp.
    gt_export-text+49(18)  = gt_output2-prod.
    gt_export-text+67(7)   = gt_output2-qty_rcv.
    gt_export-text+74(7)   = gt_output2-qty_dam.
    gt_export-text+81(8)   = gt_output2-qty_over.
    gt_export-text+89(9)   = gt_output2-catch.
    gt_export-text+98(10)  = gt_output2-date.
    gt_export-text+108(12) = gt_output2-cost.
    gt_export-text+120(1)  = gt_output2-sy_flag.
    gt_export-text+121(1)  = gt_output2-po_type.
    gt_export-text+122(7)  = gt_output2-flow_qty.
    gt_export-text+129(1)  = gt_output2-flow_flag.
    gt_export-text+130(1)  = gt_output2-gen_flow.
    gt_export-text+131(5)  = gt_output2-unit_ship.
    gt_export-text+136(10) = gt_output2-inv_ref.
    gt_export-text+146(13) = gt_output2-inv_amt.
    gt_export-text+159(11) = gt_output2-vat_amt.

    at last.
      append gt_export.
      gt_export-text(5)     = text-015.
      gt_export-text+5(1)   = '1'.
      gt_export-text+6(4)   = gc_jobs.
      gt_export-text+10(7)  = ls_footer-line_txt.
      gt_export-text+17(15) = ls_footer-sum_txt.
      clear gt_export-text+32.
    endat.

    append gt_export.
    clear: gt_output1, gt_export.
  endloop.

endform.                    " f_output_as400

*&---------------------------------------------------------------------*
*&      Form  f_output_mis
*&---------------------------------------------------------------------*
form f_output_mis.

  data: lv_period     type ty_output3-period,
        lv_dmbtr      type ty_output3-cost,
        lv_dmbtr1     type ty_output3-cost,
        lv_menge      type ty_output3-quan,
        lv_int(17)    type c,
        lv_point(2)   type c,
        z_cost        type ekbe-reewr,
        z_qty         type i,
        lv_lgort(4)   type c.

  clear: lv_period.
  concatenate gv_mjahr gv_month '01' into lv_period.

  sort gt_data1 by bukrs werks lifnr matnr shkzg.
  clear: gt_data1, gt_output3.
  loop at gt_data1.
**** Start Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
**** Finis Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
**** Start Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

    move : gt_data1-lgort to lv_lgort. "INS THINNMAS 06032012


    call function 'ZMM_WH_EXCEED_SAP'
      exporting
        im_werks = gt_data1-werks
        im_lgort = lv_lgort  "INS THINNMAS 06032012
      importing
        ex_lgort = gt_output3-plant.
**** Finis Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

*--INS THINNMAS 06032012 GO:0166 WTS
    if gt_output3-plant = 'WM01' and gt_output3-plant ne lv_lgort.
      gt_output3-plant = lv_lgort.
    endif.
*--END THINNMAS 06032012 GO:0166 WTS

*--INS THINNMAS 06042012 WTS สำโรง
    if gt_output3-plant = 'WM10' and gt_output3-plant ne lv_lgort.
      gt_output3-plant = lv_lgort.
    endif.
*--END THINNMAS 06042012 WTS สำโรง

*--INS THINNMAS 02042013 WTS มหาชัย
    if gt_output3-plant = 'WM30' and gt_output3-plant ne lv_lgort.
      gt_output3-plant = lv_lgort.
    endif.
*--END THINNMAS 02042013 WTS มหาชัย

    move gt_data1-matnr+11(7) to gt_output3-prod.

    lv_menge = gt_data1-menge.
    if lv_menge cs '-'.
      concatenate lv_menge(11)'-' into gt_output3-quan.
    else.
      move lv_menge(11)   to gt_output3-quan.
    endif.
*    UNPACK gt_output1-quan TO gt_output1-quan.

    lv_dmbtr = gt_data1-dmbtr.
    clear: lv_int.", lv_point.
    move: lv_dmbtr+0(17)  to lv_int,
          lv_int to gt_output3-cost.
*---------------------------------*

    move: lv_period       to  gt_output3-period,
          gt_data1-sort2  to  gt_output3-vendor.
    append gt_output3.
    clear: gt_data1, gt_output3, lv_lgort.
  endloop.

* Prepare Text File

*--START OF INS-SUCHAPOP 20140626

  if cb_pipe eq 'X'.
    clear: gt_output3, gt_export.
    loop at gt_output3.
      concatenate gt_output3-period gt_output3-plant gt_output3-vendor
                  gt_output3-prod gt_output3-quan
                  gt_output3-cost
                  into gt_export-text separated by '|'.

      append gt_export.
      clear: gt_output3, gt_export.
    endloop.
  else.
*--END OF INS-SUCHAPOP 20140626

*--START OF INS-SUCHAPOP 20140630
*--INS OF INS-SUCHAPOP 20150114
    "data : t1(10).
    clear: gt_output3, gt_export.
    loop at gt_output3.
      z_cost = gt_output3-cost.
      if z_cost < 0.
        z_cost = z_cost * -1.
        move z_cost to lv_dmbtr1.
        concatenate '-' lv_dmbtr1 into lv_dmbtr1.
      else.
        move z_cost to lv_dmbtr1.
      endif.

      z_qty = gt_output3-quan.
      if z_qty < 0.
        z_qty = z_qty * -1.
        move z_qty to gt_output3-quan.
        concatenate '-' gt_output3-quan into gt_output3-quan.
      endif.

      condense: gt_output3-quan no-gaps,
                lv_dmbtr1 no-gaps.
      concatenate gt_output3-period '|' gt_output3-plant '|' gt_output3-vendor '|' gt_output3-prod '|' gt_output3-quan'|' lv_dmbtr1 '|' into gt_export-text.
      append gt_export.
      clear: gt_output3, gt_export.
    endloop.

  endif.  "INS-SUCHAPOP 20140626

endform.                    " f_output_mis

*&---------------------------------------------------------------------*
*&      Form  f_export_unix
*&---------------------------------------------------------------------*
form f_export_unix.

  data: lv_unixid(2)    type c,
        lv_mappath      like sxpgcolist-parameters,
        lv_unixpath     like sxpgcolist-parameters.

* File path
  clear: lv_unixid, lv_mappath, lv_unixpath.
  case sy-sysid.
    when 'DV1'.
      lv_unixid = '00'.
    when 'QA1'.
      lv_unixid = '01'.
    when 'PR1'.
      lv_unixid = '02'.
  endcase.
  concatenate '/usr/sap/' sy-sysid '/DVEBMGS' lv_unixid
              '/work/' sy-mandt '/legacy/interface/outbound/'
              p_bukrs '/' p_event into lv_unixpath.
  concatenate lv_unixpath '/' gc_fname into lv_mappath.


* Open file
  open dataset lv_mappath for output in text mode encoding default.
  if sy-subrc ne 0.
    message e000 with text-011.
  endif.

* Transfer records
  loop at gt_export.
    transfer gt_export-text to lv_mappath.
  endloop.

* Close file
  close dataset lv_mappath.

  if sy-subrc eq 0.
    message s000 with text-010.
  endif.

endform.                    " f_export_unix

*&---------------------------------------------------------------------*
*&      Form  f_export_local
*&---------------------------------------------------------------------*
form f_export_local using stm_file_name.

  data lv_file type string.

  clear lv_file.

  if rb_stm eq 'X'.
    concatenate p_file stm_file_name into lv_file.
  else.
    lv_file = p_file.
  endif.

  if stm_file_name eq 'PURJV_PART2.TXT'.
    call function 'GUI_DOWNLOAD'
       exporting
            filename                = lv_file
*            filetype                = 'ASC'
       tables
            data_tab                = gt_export2
*            data_tab                = gt_output3
       exceptions
            file_write_error        = 1
            no_batch                = 2
            gui_refuse_filetransfer = 3
            invalid_type            = 4
            no_authority            = 5
            unknown_error           = 6
            header_not_allowed      = 7
            separator_not_allowed   = 8
            filesize_not_allowed    = 9
            header_too_long         = 10
            dp_error_create         = 11
            dp_error_send           = 12
            dp_error_write          = 13
            unknown_dp_error        = 14
            access_denied           = 15
            dp_out_of_memory        = 16
            disk_full               = 17
            dp_timeout              = 18
            file_not_found          = 19
            dataprovider_exception  = 20
            control_flush_error     = 21
            others                  = 22.
  else.
  call function 'GUI_DOWNLOAD'
       exporting
            filename                = lv_file
*            filetype                = 'ASC'
       tables
            data_tab                = gt_export
*            data_tab                = gt_output3
       exceptions
            file_write_error        = 1
            no_batch                = 2
            gui_refuse_filetransfer = 3
            invalid_type            = 4
            no_authority            = 5
            unknown_error           = 6
            header_not_allowed      = 7
            separator_not_allowed   = 8
            filesize_not_allowed    = 9
            header_too_long         = 10
            dp_error_create         = 11
            dp_error_send           = 12
            dp_error_write          = 13
            unknown_dp_error        = 14
            access_denied           = 15
            dp_out_of_memory        = 16
            disk_full               = 17
            dp_timeout              = 18
            file_not_found          = 19
            dataprovider_exception  = 20
            control_flush_error     = 21
            others                  = 22.
  endif.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  else.
    message s000 with text-010.
  endif.


endform.                    " f_export_local

* >>> BEGIN OF INSERT THEERSER 20080505
*---------------------------------------------------------------------*
*       FORM f_porcess_as400_new                                      *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
form f_porcess_as400_new.

* step 3 : separated 3 internal table (Vendor/Tax/GRIR)
  if not i_bseg[] is initial.
    delete i_bseg    where augbl ne ''
                       and koart eq 'K'.  "del clearing
    i_bseg_gr[] = i_bseg_tx[] = i_bseg[].
    delete i_bseg_gr where buzid ne 'W'. "it gr
    delete i_bseg    where koart ne 'K'. "it vendor
    delete i_bseg_tx where mwart ne 'V'. "it tax
  else.
    write:/ '**** Data Not Found ***'.
    stop.
  endif.

* step 4.1 : UPDATE LINE VENDOR
  loop at i_bseg.
    read table i_bkpf with key belnr = i_bseg-belnr
                               gjahr = i_bseg-gjahr.

    i_data-belnr = i_bseg-belnr.
    i_data-bupla = i_bseg-bupla.
    i_data-shkzg = i_bseg-shkzg.
    i_data-budat = i_bkpf-budat.
*     i_data-bednr - next loop
*     i_data-bedat - next loop
    i_data-xblnr = i_bkpf-xblnr.
    i_data-zuonr = i_bseg-zuonr.
    i_data-bldat = i_bkpf-bldat.
    i_data-lifnr = i_bseg-lifnr.
    i_data-zfbdt = i_bseg-zfbdt.
*     i_data-vlvat - next loop
    i_data-vlamt = i_bseg-dmbtr.
    i_data-sgtxt = i_bseg-sgtxt(10).
    collect i_data.
    clear i_data.
  endloop.

* step 4.2 : UPDATE LINE VAT
  loop at i_bseg_tx.
    clear i_data.
    read table i_data with key belnr = i_bseg_tx-belnr.
    if sy-subrc = 0.
      i_data-vlvat = i_data-vlvat + i_bseg_tx-dmbtr.
      modify i_data transporting vlvat
      where belnr = i_bseg_tx-belnr.
    endif.
  endloop.

* step 4.3 : UPDATE LINE PO
  data: vl_obelnr like bseg-belnr.
  sort i_bseg_gr by belnr.
  loop at i_bseg_gr.
    if vl_obelnr ne i_bseg_gr-belnr.
      read table i_data with key belnr = i_bseg_gr-belnr.
      if sy-subrc = 0.
        i_data-ebeln = i_bseg_gr-ebeln.
        modify i_data transporting ebeln
        where belnr = i_bseg_gr-belnr.
      endif.
    endif.
    vl_obelnr = i_bseg_gr-belnr.
  endloop.

* step 4.4 : MAPPING DATA
* (Tracking, Vat/Non, Old Vendor, Format Date)
  loop at i_data.
    gt_report2n-belnr = i_data-belnr.
    gt_report2n-sgtxt = i_data-sgtxt.
    perform map_whcode using i_data-bupla
                             gt_report2n-brnch.
    perform map_dctype using i_data-shkzg
                             gt_report2n-dctyp.
*    IF NOT i_data-bktxt IS INITIAL.
*      gt_report2n-docno = i_data-bktxt.
*    ELSE.
*      gt_report2n-docno = i_data-zuonr.
*    ENDIF.
    gt_report2n-docno = i_data-belnr."INS-THEERSER 20080319
    perform map_fmtdate using i_data-budat
                              gt_report2n-docdt.
    perform map_trackno using i_data-ebeln
                              gt_report2n-indno
                              gt_report2n-inddt.
    gt_report2n-rfdno = i_data-xblnr.
    perform map_fmtdate using i_data-bldat
                              gt_report2n-rfddt.
    perform map_vdsort2 using i_data-lifnr
                              gt_report2n-cvcod.
    perform map_fmtdate using i_data-zfbdt
                              gt_report2n-duedt.
    perform map_allamt using  i_data-vlvat
                              i_data-vlamt
                              gt_report2n-vatamt
                              gt_report2n-netamt
                              gt_report2n-incamt
                              gt_report2n-excamt.
    append gt_report2n.
  endloop.

endform.                    "f_porcess_as400_new
*---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  map_whcode
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_DATA_BUPLA  text
*      -->P_gt_report2n_BRNCH  text
*----------------------------------------------------------------------*
form map_whcode using    p_bupla
                         p_brnch.
  case p_bupla+1(2).
*    WHEN '10' OR '99'. "DEL THINNMAS 03112010 RDCKK1
*    WHEN '10' OR '99' OR '94' OR '98' OR '97'. "INS THINNMAS 03112010 RDCKK1
    when '10' or '99' or '94' or '98' or '97' or 'FC' or 'BC' or 'QC' or 'M0' or '91'
          or 'M1' or 'WM' or 'QM' or 'BM' or '96' or '93' or 'M3' or 'M4' "INS THINNMAS 06092011 GO:0166
          or 'M2' or 'C3' or 'C0' or 'C1' or '90' or 'B0' or 'B1' or 'B2' or 'B3' or 'D0' or 'D9'
          or 'Z1' or 'Z3'. "EDT THINNMAS 14052013
*      IF p_bupla+1(3) = '990'. "EDIT THINNMAS 20140116
*        p_brnch = 'W201'.
      if p_bupla+1(3) = '990'. "INS THINNMAS 20140116
        p_brnch = 'W901'.
      elseif p_bupla+1(3) = '940'. "INS THINNMAS 03112010 RDCKK1
        p_brnch = 'W401'.
      elseif p_bupla+1(3) = '912'. "INS THINNMAS 20150821 RDCCB-GO0369
        p_brnch = 'W121'.
      elseif p_bupla+1(3) = '913'. "INS THINNMAS 20171213 RDC บุรีรัมย์
        p_brnch = 'W131'.
      elseif p_bupla+1(3) = '980'. "INS THINNMAS 03112010 RDCKK1
        p_brnch = 'W801'.
      elseif p_bupla+1(3) = '970'. "INS THINNMAS 28022010 RDCCM
        p_brnch = 'W701'.
      elseif p_bupla+1(3) = '960'. "INS THINNMAS 16072012 RDCCR
        p_brnch = 'W601'.
      elseif p_bupla+1(3) = '930'. "INS THINNMAS 25102012 RDCLP
        p_brnch = 'W301'.
      elseif p_bupla+1(3) = 'M01'. "INS THINNMAS 06092011 GO:0166
        p_brnch = 'WM01'.
      elseif p_bupla+1(3) = 'M11'.
        p_brnch = 'WM01'.
      elseif p_bupla+1(3) = 'M09'.
        p_brnch = 'WM01'.
      elseif p_bupla+1(3) = 'M02'.
        p_brnch = 'WM02'.
      elseif p_bupla+1(3) = 'M12'.
        p_brnch = 'WM02'.
      elseif p_bupla+1(3) = 'M08'. "END THINNMAS 06092011 GO:0166
        p_brnch = 'WM02'.
      elseif p_bupla+0(4) = 'WM30'. "INS PANADYAS 19022013 SRCPA-2013/00249&2013/00854 WM30-40
        p_brnch = 'WM30'.
      elseif p_bupla+0(4) = 'QM30'.
        p_brnch = 'QM30'.
      elseif p_bupla+0(4) = 'WM39'.
        p_brnch = 'WM39'.
      elseif p_bupla+0(4) = 'WM40'.
        p_brnch = 'WM40'.
      elseif p_bupla+0(4) = 'QM40'.
        p_brnch = 'QM40'.
      elseif p_bupla+0(4) = 'WM49'.
        p_brnch = 'WM49'.           "END PANADYAS 19022013 SRCPA-2013/00249&2013/00854 WM30-40
*      ELSEIF p_bupla+1(3) = 'WM1'. "INS THINNMAS 06062012
*        p_brnch = 'WM10'.
*      ELSEIF p_bupla+1(3) = 'QM1'. "INS THINNMAS 06062012
*        p_brnch = 'QM10'.
*      ELSEIF p_bupla+1(3) = 'BM1'. "INS THINNMAS 06062012
*        p_brnch = 'BM10'.
*      ELSEIF p_bupla+1(3) = 'WM2'. "INS THINNMAS 06062012
*        p_brnch = 'WM20'.
*      ELSEIF p_bupla+1(3) = 'QM1'. "INS THINNMAS 06062012
*        p_brnch = 'QM20'.
*      ELSEIF p_bupla+1(3) = 'BM2'. "INS THINNMAS 06062012
*        p_brnch = 'BM20'.


      elseif p_bupla+1(3) = 'M10'. "EDT THINNMAS 02072012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM10'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM10'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM10'.
        endif.

      elseif p_bupla+1(3) = 'M20'. "EDT THINNMAS 02072012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM20'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM20'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM20'.
        endif.

      elseif p_bupla+1(3) = 'M03'. "INS THINNMAS 02072012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM03'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM03'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM03'.
        endif.

      elseif p_bupla+1(3) = 'M05'. "INS THINNMAS 02072012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM05'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM05'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM05'.
        endif.

      elseif p_bupla+1(3) = 'M04'. "EDT PANADYAS 24082012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM04'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM04'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM04'.
        endif.

      elseif p_bupla+1(3) = 'M06'. "EDT PANADYAS 24082012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM06'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM06'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM06'.
        endif.

      elseif p_bupla+1(3) = 'M07'. "EDT PANADYAS 24082012
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM07'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM07'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM07'.
        endif.

      elseif p_bupla+1(3) = 'C33'. "Start EDT PANADYAS 18012013
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC33'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC33'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC33'.
        endif.                    "End EDT PANADYAS 18012013

      elseif p_bupla+1(3) = 'C32'. "Start EDT PANADYAS 19022013 SRCPA-2013/00249&2013/00854 WM30-40 & FC3
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC32'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC32'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC32'.
        endif.             "End EDT PANADYAS 19022013 SRCPA-2013/00249&2013/00854 WM30-40 & FC3

      elseif p_bupla+1(3) = 'M13'. "INS PANADYAS 14032013 CPA2013/01340
        if     p_bupla+0(2) = 'WM'.
          p_brnch = 'WM13'.
        elseif p_bupla+0(2) = 'QM'.
          p_brnch = 'QM13'.
        elseif p_bupla+0(2) = 'BM'.
          p_brnch = 'BM13'.
        endif.                     "END PANADYAS 14032013 CPA2013/01340

      elseif p_bupla+1(3) = 'C11'. "INS THINNMAS 14052013
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC11'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC11'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC11'.
        endif.                    "END THINNMAS 14052013

      elseif p_bupla+1(3) = 'C02'. "INS THINNMAS 14052013
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC02'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC02'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC02'.
        endif.                    "END THINNMAS 14052013


      elseif p_bupla+1(3) = 'C01'. "INS THINNMAS 19082013
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC01'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC01'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC01'.
        endif.                    "END THINNMAS 19082013

      elseif p_bupla+1(3) = 'C08'. "INS THINNMAS 19082013
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC08'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC08'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC08'.
        endif.                    "END THINNMAS 19082013

      elseif p_bupla+1(3) = 'C06'. "INS THINNMAS 20140116
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC06'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC06'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC06'.
        endif.                    "END THINNMAS 20140116

      elseif p_bupla+1(3) = 'C07'. "INS THINNMAS 20150106
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC07'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC07'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC07'.
        endif.

      elseif p_bupla+1(3) = 'C12'. "INS THINNMAS 20150821
        if     p_bupla+0(2) = 'FC'.
          p_brnch = 'FC12'.
        elseif p_bupla+0(2) = 'QC'.
          p_brnch = 'QC12'.
        elseif p_bupla+0(2) = 'BC'.
          p_brnch = 'BC12'.
        endif.

      elseif p_bupla+1(3) = 'K01'. "INS THINNMAS 20140815
        if     p_bupla+0(2) = 'WK'.
          p_brnch = 'WK01'.
        elseif p_bupla+0(2) = 'QK'.
          p_brnch = 'QK01'.
        elseif p_bupla+0(2) = 'BK'.
          p_brnch = 'BK01'.
        endif.                    "INS THINNMAS 20140815

      elseif p_bupla+1(3) = 'B02'. "INS THINNMAS 20140815
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB02'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB02'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB02'.
        endif.

      elseif p_bupla+1(3) = 'B22'. "INS THINNMAS 20150106
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB22'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB22'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB22'.
        endif.

      elseif p_bupla+1(3) = 'B04'. "INS THINNMAS 20150106
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB04'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB04'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB04'.
        endif.

      elseif p_bupla+1(3) = 'B11'. "INS THINNMAS 20150106
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB11'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB11'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB11'.
        endif.

      elseif p_bupla+1(3) = 'B03'. "INS THINNMAS 20150106
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB03'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB03'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB03'.
        endif.

      elseif p_bupla+1(3) = 'B32'. "INS THINNMAS 20150106
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB32'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB32'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB32'.
        endif.


      elseif p_bupla+1(3) = 'B01'. "INS THINNMAS 20140815
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB01'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB01'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB01'.
        endif.

      elseif p_bupla+1(3) = 'B03'. "INS THINNMAS 20140815
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB03'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB03'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB03'.
        endif.

      elseif p_bupla+1(3) = 'D01'. "INS THINNMAS 20150122
        if     p_bupla+0(2) = 'WD'.
          p_brnch = 'WD01'.
        elseif p_bupla+0(2) = 'QD'.
          p_brnch = 'QD01'.
        elseif p_bupla+0(2) = 'BD'.
          p_brnch = 'BD01'.
        endif.

      elseif p_bupla+1(3) = 'Z11'. "INS THINNMAS 20151008
        if     p_bupla+0(2) = 'WZ'.
          p_brnch = 'WZ11'.
        elseif p_bupla+0(2) = 'QZ'.
          p_brnch = 'QZ11'.
        elseif p_bupla+0(2) = 'BZ'.
          p_brnch = 'BZ11'.
        endif.
      elseif p_bupla+1(3) = 'Z32'. "INS THINNMAS 20151008
        if     p_bupla+0(2) = 'WZ'.
          p_brnch = 'WZ32'.
        elseif p_bupla+0(2) = 'QZ'.
          p_brnch = 'QZ32'.
        elseif p_bupla+0(2) = 'BZ'.
          p_brnch = 'BZ32'.
        endif.
      elseif p_bupla+1(3) = 'B14'. "INS THINNMAS 20151008
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB14'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB14'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB14'.
        endif.

      elseif p_bupla+1(3) = 'B05'. "INS THINNMAS 20151008
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB05'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB05'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB05'.
        endif.

      elseif p_bupla+1(3) = 'B33'. "INS THINNMAS 20171102
        if     p_bupla+0(2) = 'WB'.
          p_brnch = 'WB33'.
        elseif p_bupla+0(2) = 'QB'.
          p_brnch = 'QB33'.
        elseif p_bupla+0(2) = 'BB'.
          p_brnch = 'BB33'.
        endif.

      else.
        p_brnch = 'W101'.
      endif.
    when '11'.
      p_brnch = 'W111'.
    when '12'.           "INS-THINNMAS 20150903
      p_brnch = 'W121'.
    when '13'.
      p_brnch = 'W131'. "INS THINNMAS 20171213 RDC บุรีรัมย์
    when '20'.
      p_brnch = 'W201'.
    when '50'.
      p_brnch = 'W501'.
    when '40'.
      p_brnch = 'W401'.  "INS-THEERSER 20100315
    when '80'.
      p_brnch = 'W801'. "INS THINNMAS 03112010 RDCKK1
    when '70'.
      p_brnch = 'W701'. "INS THINNMAS 28022011 RDCCM
    when '60'.
      p_brnch = 'W601'. "INS THINNMAS 16072012 RDCCR
    when '30'.
      p_brnch = 'W301'. "INS THINNMAS 25102012 RDCLP
    when '90'.
      p_brnch = 'W901'. "INS THINNMAS 20140116 DCMC

  endcase.
endform.                    " map_whcode
*&---------------------------------------------------------------------*
*&      Form  map_dctype
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_DATA_SHKZG  text
*      -->P_gt_report2n_DCTYP  text
*----------------------------------------------------------------------*
form map_dctype using    p_shkzg
                         p_dctyp.
  if p_shkzg = 'S'.
    p_dctyp = '43'.
  else.
    p_dctyp = '41'.
  endif.
endform.                    " map_dctype
*&---------------------------------------------------------------------*
*&      Form  map_format_date
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_DATA_BUDAT  text
*      -->P_gt_report2n_DOCDT  text
*----------------------------------------------------------------------*
form map_fmtdate using    p_budat
                          p_docdt.
  data: vl_year(4) type n.
  vl_year = p_budat(4).
  vl_year = vl_year + 543.
  concatenate vl_year+2(2) p_budat+4(4) into p_docdt.
endform.                    " map_format_date
*&---------------------------------------------------------------------*
*&      Form  map_trackno
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_DATA_EBELN  text
*      -->P_gt_report2n_INDNO  text
*      -->P_gt_report2n_INDDT  text
*----------------------------------------------------------------------*
form map_trackno using    p_ebeln
                          p_indno
                          p_inddt.
  clear: p_indno, p_inddt.
  check p_ebeln ne ''.
  data: vl_bednr like ekpo-bednr,
        vl_bedat like ekko-bedat.
  select single ekpo~bednr ekko~bedat into (vl_bednr, vl_bedat )
  from   ekpo inner join ekko
         on ekpo~ebeln = ekko~ebeln
  where  ekpo~ebeln = p_ebeln.
  if sy-subrc = 0.
    p_indno = vl_bednr.
    perform map_fmtdate using vl_bedat
                              p_inddt.
  endif.
* useing form formatdate

endform.                    " map_trackno
*&---------------------------------------------------------------------*
*&      Form  map_vdsort2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_DATA_LIFNR  text
*      -->P_gt_report2n_CVCOD  text
*----------------------------------------------------------------------*
form map_vdsort2 using    p_lifnr
                          p_cvcod.
  select single sort2 into p_cvcod
  from   lfa1 inner join adrc
    on   lfa1~adrnr = adrc~addrnumber
  where  lfa1~lifnr = p_lifnr.

endform.                    " map_vdsort2
*&---------------------------------------------------------------------*
*&      Form  map_allamt
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_DATA_VLVAT  text
*      -->P_I_DATA_VLAMT  text
*      -->P_gt_report2n_VATAMT  text
*      -->P_gt_report2n_NETAMT  text
*      -->P_gt_report2n_INCAMT  text
*      -->P_gt_report2n_EXCAMT  text
*----------------------------------------------------------------------*
form map_allamt using    p_vlvat
                         p_vlamt
                         p_vatamtr
                         p_netamtr
                         p_incamtr
                         p_excamtr.
  data: p_vatamt(11),
        p_netamt(13),
        p_incamt(13),
        p_excamt(13).
  data vl_dif like bseg-dmbtr.
  if p_vlvat ne 0.
    vl_dif   = p_vlamt - p_vlvat.
    p_vatamt = p_vlvat.
    p_netamt = p_vlamt.
    p_incamt = vl_dif.
    p_excamt = '0.00'.
  else.
    p_vatamt = '0.00'.
    p_netamt = p_vlamt.
    p_incamt = '0.00'.
    p_excamt = p_vlamt.
  endif.
  p_vatamtr = p_vatamt.
  p_netamtr = p_netamt.
  p_incamtr = p_incamt.
  p_excamtr = p_excamt.
  shift p_vatamtr right deleting trailing space.
  shift p_netamtr right deleting trailing space.
  shift p_incamtr right deleting trailing space.
  shift p_excamtr right deleting trailing space.
endform.                    " map_allamt

*&---------------------------------------------------------------------*
*&      Form  define_start_end_date
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LV_SDATE  text
*      -->P_LV_EDATE  text
*----------------------------------------------------------------------*
form define_start_end_date using    p_lv_sdate
                                    p_lv_edate.
  data lv_tperiod like rf40r-disp_perio.
  data: lv_tyear(4) type n. "INS-THEERSER 20090107

  concatenate p_period '01' into p_lv_sdate.
  if p_period+4(2) eq '12'.
    lv_tyear = p_period(4) + 1.
    concatenate lv_tyear '01' into lv_tperiod.
  else.
    lv_tperiod = p_period + 1.
  endif."INS-THEERSER 20090107

  concatenate lv_tperiod '01' into p_lv_edate.
  p_lv_edate = p_lv_edate - 1.
endform.                    " define_start_end_date

*&---------------------------------------------------------------------*
*&      Form  defind_business_place
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_WERKS  text
*      -->P_R_BUPLA  text
*----------------------------------------------------------------------*
form defind_business_place.
  data lv_bupla like bseg-bupla.
  loop at s_werks.
    perform change_werks_to_bupla using s_werks-low.
    if s_werks-high gt '0107'."EDIT-THEERSER 20100315
      s_werks-high = '0105'.
    endif.
    perform change_werks_to_bupla using s_werks-high.
    clear gr_bupla.
    gr_bupla-sign   = s_werks-sign.
    gr_bupla-option = s_werks-option.
    gr_bupla-low    = s_werks-low.
    gr_bupla-high   = s_werks-high.
    append gr_bupla to r_bupla.
  endloop.
endform.                    " defind_business_place
*&---------------------------------------------------------------------*
*&      Form  change_werks_to_bupla
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_P_WERKS_LOW  text
*----------------------------------------------------------------------*
form change_werks_to_bupla using p_werks.
**** Start Delete 12 Lines by wuttitho 20090804 RDC Surat Project****
*  CASE p_werks.
*    WHEN '0104'.
*      p_werks = 'W101'.
*    WHEN '0105'.
*      p_werks = 'W501'.
*    WHEN '0106'.
*      p_werks = 'W201'.
*    WHEN '0107'.
*      p_werks = 'W111'.
*    WHEN OTHERS.
*      p_werks = ''.
*  ENDCASE.
**** Finis Delete 12 Lines by wuttitho 20090804 RDC Surat Project****
**** Start Insert 13 Lines by wuttitho 20090804 RDC Surat Project****
  call function 'ZMM_WH_EXCEED_SAP'
   exporting
*   IM_ZWHID       =
     im_werks       = p_werks
*   IM_LGORT       =
   importing
*   EX_WERKS       =
     ex_lgort       = p_werks
*   EX_INSMK       =
*   EX_ZWHID       =
*   EX_DISCT       =
*   EX_SHPWH       =
            .
**** Finis Insert 13 Lines by wuttitho 20090804 RDC Surat Project****
endform.                    " change_werks_to_bupla
*&---------------------------------------------------------------------*
*&      Form  f_write_as400_new
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form f_write_as400_new.
  write:/ sy-uline.
  perform write_header_as400.
  perform write_line_as400.
  write:/ sy-uline.
  loop at gt_report2n.
    perform write_line_as400.
  endloop.
  write:/ sy-uline.
  write:/ '****** END OF REPORT *****'.

endform.                    " f_write_as400_new
*&---------------------------------------------------------------------*
*&      Form  f_output_as400_new
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form f_output_as400_new.
  refresh gt_export.
  loop at gt_report2n.
    clear: gt_report2n-belnr, gt_report2n-sgtxt.
    gt_export = gt_report2n.
    append gt_export.
    clear gt_export.
  endloop.
endform.                    " f_output_as400_new

*&---------------------------------------------------------------------*
*&      Form  write_line_as400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form write_line_as400.
  write:/ '|',
  gt_report2n-brnch,
  '|',
  gt_report2n-dctyp,
  '|',
  gt_report2n-docno,
  '|',
  gt_report2n-docdt,
  '|',
  gt_report2n-rfdno,
  '|',
  gt_report2n-rfddt,
  '|',
  gt_report2n-cvcod,
  '|',
  gt_report2n-duedt,
  '|',
  gt_report2n-vatamt,
  '|',
  gt_report2n-netamt,
  '|',
  gt_report2n-incamt,
  '|',
  gt_report2n-excamt,
  '|',
  gt_report2n-belnr,
  '|',
  gt_report2n-sgtxt,
  '|'.

endform.                    " write_line_as400
*
*&---------------------------------------------------------------------*
*&      Form  write_header_as400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form write_header_as400.
  gt_report2n-brnch = 'Bplc'.
  gt_report2n-dctyp = 'Dt'.
  gt_report2n-docno = 'DocNo.'.
  gt_report2n-docdt = 'DocDate'.
  gt_report2n-rfdno = 'RefNo'.
  gt_report2n-rfddt = 'RefDate'.
  gt_report2n-cvcod = 'CvCode'.
  gt_report2n-duedt = 'DueDate'.
  gt_report2n-vatamt = 'VatAmt'.
  gt_report2n-netamt = 'NetAmt'.
  gt_report2n-incamt = 'IncVatAmt'.
  gt_report2n-excamt = 'ExcVatAmt'.
  gt_report2n-belnr  = 'SAPDoc'.
  gt_report2n-sgtxt  = 'HeadText'.
endform.                    " write_header_as400

* <<< END OF INSERT THEERSER 20080505

***********************************************************************


*
*&---------------------------------------------------------------------*
*&      Form  auto_update_field
*&---------------------------------------------------------------------*
*       text 11/10/2018
*----------------------------------------------------------------------*
*  -->  p1        NATTAKAN
*  <--  p2        text
*----------------------------------------------------------------------*
form auto_update_field using isclick type c.


data : it_dynfield type standard table of dynpread,
      ls_dynfield type dynpread.

data : thisdatetmp like sy-datum.
data : nextdatetmp like sy-datum.
data : lastdatetmp like sy-datum.
data : firstdatetmp like sy-datum.

data : tmpdate(2) type c.
data : tmpmonth(2) type c.
data : tmpyear(4) type c.

data : nextdate(8) type c.
data : lastdate(8) type c.
data : firstdate(8) type c.

clear s_file2.
clear s_budat.
refresh s_file2.
refresh s_budat.


if s_file1-high is not initial.

thisdatetmp = s_file1-high.
***********************  CALCULATE FIRST DATE    **********************************************
clear tmpdate.
clear tmpmonth.
clear tmpyear.
firstdatetmp = s_file1-high.
firstdatetmp+6(2) = '01'.

tmpdate = '01'.
tmpmonth = firstdatetmp+4(2).
tmpyear = firstdatetmp+0(4).
  concatenate tmpdate tmpmonth tmpyear into firstdate.

***********************  CALCULATE LAST DATE    **********************************************
clear tmpdate.
clear tmpmonth.
clear tmpyear.
call function 'LAST_DAY_OF_MONTHS'
  exporting
    day_in                  = s_file1-high
 importing
   last_day_of_month       = lastdatetmp
* EXCEPTIONS
*   DAY_IN_NO_DATE          = 1
*   OTHERS                  = 2
          .
if sy-subrc eq 0.

  tmpdate = lastdatetmp+6(2).
  tmpmonth = lastdatetmp+4(2).
  tmpyear = lastdatetmp+0(4).
  concatenate tmpdate tmpmonth tmpyear into lastdate.
endif.

***********************  CALCULATE NEXT DATE    **********************************************
  clear tmpdate.
  clear tmpmonth.
  clear tmpyear.
if s_file1-high eq lastdatetmp.
  nextdatetmp = lastdatetmp.
  case_stm = '2'.
else.
  nextdatetmp = s_file1-high + 1.
  case_stm = '1'.
endif.




  clear s_file1.
  refresh s_file1.

  move :
 'I' to s_file1-sign,
 'BT' to s_file1-option,
 firstdatetmp to s_file1-low,
  thisdatetmp to s_file1-high.
  append s_file1.

  move :
 'I' to s_file2-sign,
 'BT' to s_file2-option,
  nextdatetmp to s_file2-low,
  lastdatetmp to s_file2-high.
  append s_file2.

   move :
 'I' to s_budat-sign,
 'BT' to s_budat-option,
  firstdatetmp to s_budat-low,
  lastdatetmp to s_budat-high.
  append s_budat.

  p_period = firstdatetmp+0(6).

endif.


endform.


*
*&---------------------------------------------------------------------*
*&      Form  f_porcess_stmp
*&---------------------------------------------------------------------*
*       text 12/10/2018
*----------------------------------------------------------------------*
*  -->  p1        NATTAKAN
*  <--  p2        text
*----------------------------------------------------------------------*

form f_process_stm1.

  data: lt_data1  type table of ty_data1  with header line,
        ls_data1  type ty_data1.

    data: lt_data2  type table of ty_data1  with header line,
        ls_data2  type ty_data1.

  data: begin of ls_sum,
        dmbtr   type mseg-dmbtr,
        menge   type mseg-menge,
        end of ls_sum.

  sort: gt_mara1  by matnr,
        gt_lfa1  by lifnr.

  refresh lt_data1.
  clear: gt_mseg, lt_data1.
  loop at gt_mseg.
******************************************************
   if gt_mseg-budat <= s_file1-high.

    clear gt_mara1.
    read table gt_mara1 with key matnr = gt_mseg-matnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_mara1-matnr  to lt_data1-matnr,
            gt_mara1-matkl  to lt_data1-matkl.
    endif.
    clear gt_lfa1.
    read table gt_lfa1 with key lifnr = gt_mseg-lifnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_lfa1-lifnr  to lt_data1-lifnr,
            gt_lfa1-adrnr  to lt_data1-adrnr,
            gt_lfa1-name1  to lt_data1-name1,
            gt_lfa1-sort2  to lt_data1-sort2.
    endif.
    move: gt_mseg-bukrs    to lt_data1-bukrs,
          gt_mseg-werks    to lt_data1-werks,
          gt_mseg-lifnr    to lt_data1-lifnr,
          gt_mseg-matnr    to lt_data1-matnr,
          gt_mseg-shkzg    to lt_data1-shkzg,
          gt_mseg-mblnr    to lt_data1-mblnr,
          gt_mseg-mjahr    to lt_data1-mjahr,
          gt_mseg-zeile    to lt_data1-zeile,
          gt_mseg-bwart    to lt_data1-bwart,
          gt_mseg-lgort    to lt_data1-lgort.
*--START OF INS-SUCHAPOP 20150504
    if gt_mseg-bwart eq '959' or gt_mseg-bwart eq '960'.
      if gt_mseg-exbwr is not initial.
        move gt_mseg-exbwr    to lt_data1-dmbtr.
      else.
        move gt_mseg-dmbtr    to lt_data1-dmbtr.
      endif.
    else.
      move gt_mseg-dmbtr    to lt_data1-dmbtr.
    endif.
*--END OF INS-SUCHAPOP 20150504
    move :gt_mseg-menge    to lt_data1-menge,
          gt_mseg-budat    to lt_data1-budat.
    append lt_data1.
    clear: gt_mseg, lt_data1.

   endif.

  endloop.

* Summary Purchase for Memo Java
  sort lt_data1 by bukrs werks lifnr matnr shkzg.
  clear: lt_data1, gt_datastm1, ls_data1, ls_sum, gt_report1.
  loop at lt_data1.
    ls_data1 = lt_data1.
    ls_sum-dmbtr = ls_sum-dmbtr + ls_data1-dmbtr.
    ls_sum-menge = ls_sum-menge + ls_data1-menge.
    at end of shkzg.
      move-corresponding ls_data1 to gt_datastm1.
      move: ls_sum-dmbtr to gt_datastm1-dmbtr,
            ls_sum-menge to gt_datastm1-menge.
      call function 'ZMM_PRICE_C2RTL'
        exporting
          werks           = gt_datastm1-werks
          matnr           = gt_datastm1-matnr
          budat           = s_budat-high
          kostl           = gc_kostl
        importing
          price_rtl       = gt_datastm1-retail
        exceptions
          price_not_found = 1
          area_not_found  = 2
          others          = 3.
      if sy-subrc <> 0.
        clear gt_datastm1-retail.
      else.
        gt_datastm1-retail = gt_datastm1-menge * gt_datastm1-retail.
      endif.
      move gt_datastm1-matkl+3(2) to gt_datastm1-pma.
      append gt_datastm1.
      if gt_datastm1-shkzg eq 'S'.
        gt_report1-docty = '41'.
      else.
        gt_report1-docty = '43'.
      endif.
      move-corresponding gt_datastm1 to gt_report1.
      append gt_report1.
      clear: gt_datastm1, gt_report1, ls_sum.
    endat.
    clear: lt_data1, ls_data1.
  endloop.

endform.                    " f_porcess_stm case 1


form f_process_stm2.


  data: lt_data1  type table of ty_data1  with header line,
        ls_data1  type ty_data1.

    data: lt_data2  type table of ty_data1  with header line,
        ls_data2  type ty_data1.

  data: begin of ls_sum,
        dmbtr   type mseg-dmbtr,
        menge   type mseg-menge,
        end of ls_sum.

  sort: gt_mara1  by matnr,
        gt_lfa1  by lifnr.

  refresh lt_data1.
  clear: gt_mseg, lt_data1.

  loop at gt_mseg.

******************************************************
   if gt_mseg-budat > s_file1-high.

    clear gt_mara1.
    read table gt_mara1 with key matnr = gt_mseg-matnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_mara1-matnr  to lt_data1-matnr,
            gt_mara1-matkl  to lt_data1-matkl.
    endif.
    clear gt_lfa1.
    read table gt_lfa1 with key lifnr = gt_mseg-lifnr
                       binary search.
    if sy-subrc eq 0.
      move: gt_lfa1-lifnr  to lt_data1-lifnr,
            gt_lfa1-adrnr  to lt_data1-adrnr,
            gt_lfa1-name1  to lt_data1-name1,
            gt_lfa1-sort2  to lt_data1-sort2.
    endif.
    move: gt_mseg-bukrs    to lt_data1-bukrs,
          gt_mseg-werks    to lt_data1-werks,
          gt_mseg-lifnr    to lt_data1-lifnr,
          gt_mseg-matnr    to lt_data1-matnr,
          gt_mseg-shkzg    to lt_data1-shkzg,
          gt_mseg-mblnr    to lt_data1-mblnr,
          gt_mseg-mjahr    to lt_data1-mjahr,
          gt_mseg-zeile    to lt_data1-zeile,
          gt_mseg-bwart    to lt_data1-bwart,
          gt_mseg-lgort    to lt_data1-lgort.
*--START OF INS-SUCHAPOP 20150504
    if gt_mseg-bwart eq '959' or gt_mseg-bwart eq '960'.
      if gt_mseg-exbwr is not initial.
        move gt_mseg-exbwr    to lt_data1-dmbtr.
      else.
        move gt_mseg-dmbtr    to lt_data1-dmbtr.
      endif.
    else.
      move gt_mseg-dmbtr    to lt_data1-dmbtr.
    endif.
*--END OF INS-SUCHAPOP 20150504
    move :gt_mseg-menge    to lt_data1-menge,
          gt_mseg-budat    to lt_data1-budat.
    append lt_data1.
    clear: gt_mseg, lt_data1.

   endif.
  endloop.

* Summary Purchase for Memo Java
  sort lt_data1 by bukrs werks lifnr matnr shkzg.
  clear: lt_data1, gt_datastm2, ls_data1, ls_sum, gt_report1.
  loop at lt_data1.
    ls_data1 = lt_data1.
    ls_sum-dmbtr = ls_sum-dmbtr + ls_data1-dmbtr.
    ls_sum-menge = ls_sum-menge + ls_data1-menge.
    at end of shkzg.
      move-corresponding ls_data1 to gt_datastm2.
      move: ls_sum-dmbtr to gt_datastm2-dmbtr,
            ls_sum-menge to gt_datastm2-menge.
      call function 'ZMM_PRICE_C2RTL'
        exporting
          werks           = gt_datastm2-werks
          matnr           = gt_datastm2-matnr
          budat           = s_budat-high
          kostl           = gc_kostl
        importing
          price_rtl       = gt_datastm2-retail
        exceptions
          price_not_found = 1
          area_not_found  = 2
          others          = 3.
      if sy-subrc <> 0.
        clear gt_datastm2-retail.
      else.
        gt_datastm2-retail = gt_datastm2-menge * gt_datastm2-retail.
      endif.
      move gt_datastm2-matkl+3(2) to gt_datastm2-pma.
      append gt_datastm2.
      if gt_datastm2-shkzg eq 'S'.
        gt_report1-docty = '41'.
      else.
        gt_report1-docty = '43'.
      endif.
      move-corresponding gt_datastm2 to gt_report1.
      append gt_report1.
      clear: gt_datastm2, gt_report1, ls_sum.
    endat.
    clear: lt_data1, ls_data1.
  endloop.
endform.                    " f_porcess_stm case 2




******************************************************************************
**               Form output stm 1                                          **
**             By NATTAKAN 16/10/2018                                       **
******************************************************************************

form f_output_stm1.

  data: lv_yearth(4)  type n,
        lv_year(2)    type c,
        lv_period     type ty_output1-period,
        lv_dmbtr      type ty_output1-cost,
        lv_menge      type ty_output1-quan,
        lv_int(14)    type c,
        lv_point(2)   type c,
        lv_lgort(4)    type c.

  clear: lv_yearth, lv_year, lv_period.
  lv_yearth = gv_mjahr.
  lv_yearth = lv_yearth + 543.
  write lv_yearth+2(2) to lv_year.
  concatenate lv_year gv_month into lv_period.

  sort gt_datastm1 by bukrs werks lifnr matnr shkzg.
  clear: gt_datastm1, gt_output1.
  loop at gt_datastm1.
**** Start Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
*    CASE gt_datastm1-werks.
*      WHEN '0104'.
*        gt_output1-plant = 'W101'.
*      WHEN '0105'.
*        gt_output1-plant = 'W501'.
*      WHEN '0106'.
*        gt_output1-plant = 'W201'.
*      WHEN '0107'.
*        gt_output1-plant = 'W111'.
*    ENDCASE.
**** Finis Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
**** Start Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

    move : gt_datastm1-lgort to lv_lgort. "INS THINNMAS 06032012


    call function 'ZMM_WH_EXCEED_SAP'
     exporting
*       im_zwhid       =
       im_werks       = gt_datastm1-werks
       im_lgort       = lv_lgort  "INS THINNMAS 06032012
     importing
*   EX_WERKS       =
       ex_lgort       = gt_output1-plant
*   EX_INSMK       =
*   ex_zwhid       =
*   EX_DISCT       =
*   EX_SHPWH       =
              .
**** Finis Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

*--INS THINNMAS 06032012 GO:0166 WTS
    if gt_output1-plant = 'WM01' and gt_output1-plant ne lv_lgort.
      gt_output1-plant = lv_lgort.
    endif.
*--END THINNMAS 06032012 GO:0166 WTS

*--INS THINNMAS 06042012 WTS สำโรง
    if gt_output1-plant = 'WM10' and gt_output1-plant ne lv_lgort.
      gt_output1-plant = lv_lgort.
    endif.
*--END THINNMAS 06042012 WTS สำโรง

*--INS THINNMAS 02042013 WTS มหาชัย
    if gt_output1-plant = 'WM30' and gt_output1-plant ne lv_lgort.
      gt_output1-plant = lv_lgort.
    endif.
*--END THINNMAS 02042013 WTS มหาชัย

    if gt_datastm1-shkzg eq 'S'.
      gt_output1-docty = '41'.
    else.
      gt_output1-docty = '43'.
    endif.

    move gt_datastm1-matnr+11(7) to gt_output1-prod.

    lv_menge = gt_datastm1-menge.
    move lv_menge+0(11)   to gt_output1-quan.
    unpack gt_output1-quan to gt_output1-quan.

    lv_dmbtr = gt_datastm1-dmbtr.
    clear: lv_int, lv_point.
    move: lv_dmbtr+0(12)  to lv_int,
          lv_dmbtr+13(2)  to lv_point.
    unpack lv_int to lv_int.
    concatenate lv_int lv_point into gt_output1-cost.

    lv_dmbtr = gt_datastm1-retail.
    clear: lv_int, lv_point.
    move: lv_dmbtr+0(12)  to lv_int,
          lv_dmbtr+13(2)  to lv_point.
    unpack lv_int to lv_int.
    concatenate lv_int lv_point into gt_output1-retail.

    unpack: gt_output1-filler1 to gt_output1-filler1,
            gt_output1-filler2 to gt_output1-filler2,
            gt_output1-filler3 to gt_output1-filler3.

    move: lv_period       to  gt_output1-period,
          gt_datastm1-sort2  to  gt_output1-vendor,
          gt_datastm1-pma    to  gt_output1-pma.
    append gt_output1.
    clear: gt_datastm1, gt_output1, lv_lgort.
  endloop.

* Prepare Text File

*--START OF INS-SUCHAPOP 20140626
*IF cb_pipe EQ 'X'.
*    CLEAR: gt_output1, gt_export.
*  LOOP AT gt_output1.
*    CONCATENATE gt_output1-period gt_output1-plant gt_output1-vendor gt_output1-pma
*                gt_output1-prod gt_output1-docty gt_output1-filler1 gt_output1-quan
*                gt_output1-filler2 gt_output1-cost gt_output1-filler3 gt_output1-retail
*                gt_output1-order INTO gt_export-text SEPARATED BY '|'.
*
*    APPEND gt_export.
*    CLEAR: gt_output1, gt_export.
*  ENDLOOP.

  if cb_pipe eq 'X'.
    clear: gt_output1, gt_export.
    loop at gt_output1.
      concatenate gt_output1-period gt_output1-plant gt_output1-vendor gt_output1-pma
                  gt_output1-prod gt_output1-docty gt_output1-quan
                  gt_output1-cost gt_output1-retail
                  into gt_export-text separated by '|'.

      append gt_export.
      clear: gt_output1, gt_export.
    endloop.
  else.
*--END OF INS-SUCHAPOP 20140626

*--START OF INS-SUCHAPOP 20140630
*--INS OF INS-SUCHAPOP 20150114
    clear: gt_output1, gt_export.
    loop at gt_output1.
      gt_export-text(4)      = gt_output1-period.
      gt_export-text+4(4)    = gt_output1-plant.
      gt_export-text+8(7)    = gt_output1-vendor.
      gt_export-text+15(2)   = gt_output1-pma.
      gt_export-text+17(12)  = gt_output1-prod.
      gt_export-text+29(2)   = gt_output1-docty.
      gt_export-text+31(13)  = gt_output1-filler1.
      gt_export-text+44(16)  = gt_output1-quan.
      gt_export-text+60(17)  = gt_output1-filler2.
      gt_export-text+77(16)  = gt_output1-cost.
      gt_export-text+93(15)  = gt_output1-filler3.
      gt_export-text+108(16) = gt_output1-retail.
      gt_export-text+124(10) = gt_output1-order.
      append gt_export.
      clear: gt_output1, gt_export.
    endloop.
*--END OF INS-SUCHAPOP 20150114
*--END OF INS-SUCHAPOP 20140630

*--INS OF INS-SUCHAPOP 20150114
*    CLEAR: gt_output1, gt_export.
*  LOOP AT gt_output1.
*    gt_export-text(4)      = gt_output1-period.
*    gt_export-text+4(4)    = gt_output1-plant.
*    gt_export-text+8(7)    = gt_output1-vendor.
*    gt_export-text+15(2)   = gt_output1-pma.
*    gt_export-text+17(12)  = gt_output1-prod.
*    gt_export-text+29(2)   = gt_output1-docty.
**    gt_export-text+31(13)  = gt_output1-filler1.
*    gt_export-text+31(16)  = gt_output1-quan.
**    gt_export-text+60(17)  = gt_output1-filler2.
*    gt_export-text+47(16)  = gt_output1-cost.
**    gt_export-text+93(15)  = gt_output1-filler3.
*    gt_export-text+63(16) = gt_output1-retail.
*    gt_export-text+79(10) = gt_output1-order.
*    APPEND gt_export.
*    CLEAR: gt_output1, gt_export.
*  ENDLOOP.
*--END OF INS-SUCHAPOP 20150114

  endif.  "INS-SUCHAPOP 20140626

endform.                    " f_output_stm1


******************************************************************************
**               Form output stm 2                                         **
**             By NATTAKAN 16/10/2018                                       **
******************************************************************************

form f_output_stm2.

  data: lv_yearth(4)  type n,
        lv_year(2)    type c,
        lv_period     type ty_output1-period,
        lv_dmbtr      type ty_output1-cost,
        lv_menge      type ty_output1-quan,
        lv_int(14)    type c,
        lv_point(2)   type c,
        lv_lgort(4)    type c.

  clear: lv_yearth, lv_year, lv_period.
  lv_yearth = gv_mjahr.
  lv_yearth = lv_yearth + 543.
  write lv_yearth+2(2) to lv_year.
  concatenate lv_year gv_month into lv_period.

  sort gt_datastm2 by bukrs werks lifnr matnr shkzg.
  clear: gt_datastm2, gt_output4.
  loop at gt_datastm2.
**** Start Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
*    CASE gt_datastm2-werks.
*      WHEN '0104'.
*        gt_output4-plant = 'W101'.
*      WHEN '0105'.
*        gt_output4-plant = 'W501'.
*      WHEN '0106'.
*        gt_output4-plant = 'W201'.
*      WHEN '0107'.
*        gt_output4-plant = 'W111'.
*    ENDCASE.
**** Finis Delete 10 Lines by wuttitho 20090804 RDC Surat Project****
**** Start Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

    move : gt_datastm2-lgort to lv_lgort. "INS THINNMAS 06032012


    call function 'ZMM_WH_EXCEED_SAP'
     exporting
*       im_zwhid       =
       im_werks       = gt_datastm2-werks
       im_lgort       = lv_lgort  "INS THINNMAS 06032012
     importing
*   EX_WERKS       =
       ex_lgort       = gt_output4-plant
*   EX_INSMK       =
*   ex_zwhid       =
*   EX_DISCT       =
*   EX_SHPWH       =
              .
**** Finis Insert 13 Lines by wuttitho 20090804 RDC Surat Project****

*--INS THINNMAS 06032012 GO:0166 WTS
    if gt_output4-plant = 'WM01' and gt_output4-plant ne lv_lgort.
      gt_output4-plant = lv_lgort.
    endif.
*--END THINNMAS 06032012 GO:0166 WTS

*--INS THINNMAS 06042012 WTS สำโรง
    if gt_output4-plant = 'WM10' and gt_output4-plant ne lv_lgort.
      gt_output4-plant = lv_lgort.
    endif.
*--END THINNMAS 06042012 WTS สำโรง

*--INS THINNMAS 02042013 WTS มหาชัย
    if gt_output4-plant = 'WM30' and gt_output4-plant ne lv_lgort.
      gt_output4-plant = lv_lgort.
    endif.
*--END THINNMAS 02042013 WTS มหาชัย

    if gt_datastm2-shkzg eq 'S'.
      gt_output4-docty = '41'.
    else.
      gt_output4-docty = '43'.
    endif.

    move gt_datastm2-matnr+11(7) to gt_output4-prod.

    lv_menge = gt_datastm2-menge.
    move lv_menge+0(11)   to gt_output4-quan.
    unpack gt_output4-quan to gt_output4-quan.

    lv_dmbtr = gt_datastm2-dmbtr.
    clear: lv_int, lv_point.
    move: lv_dmbtr+0(12)  to lv_int,
          lv_dmbtr+13(2)  to lv_point.
    unpack lv_int to lv_int.
    concatenate lv_int lv_point into gt_output4-cost.

    lv_dmbtr = gt_datastm2-retail.
    clear: lv_int, lv_point.
    move: lv_dmbtr+0(12)  to lv_int,
          lv_dmbtr+13(2)  to lv_point.
    unpack lv_int to lv_int.
    concatenate lv_int lv_point into gt_output4-retail.

    unpack: gt_output4-filler1 to gt_output4-filler1,
            gt_output4-filler2 to gt_output4-filler2,
            gt_output4-filler3 to gt_output4-filler3.

    move: lv_period       to  gt_output4-period,
          gt_datastm2-sort2  to  gt_output4-vendor,
          gt_datastm2-pma    to  gt_output4-pma.
    append gt_output4.
    clear: gt_datastm2, gt_output4, lv_lgort.
  endloop.

* Prepare Text File

*--START OF INS-SUCHAPOP 20140626
*IF cb_pipe EQ 'X'.
*    CLEAR: gt_output4, gt_export.
*  LOOP AT gt_output4.
*    CONCATENATE gt_output4-period gt_output4-plant gt_output4-vendor gt_output4-pma
*                gt_output4-prod gt_output4-docty gt_output4-filler1 gt_output4-quan
*                gt_output4-filler2 gt_output4-cost gt_output4-filler3 gt_output4-retail
*                gt_output4-order INTO gt_export2-text SEPARATED BY '|'.
*
*    APPEND gt_export2.
*    CLEAR: gt_output4, gt_export2.
*  ENDLOOP.

  if cb_pipe eq 'X'.
    clear: gt_output4, gt_export2.
    loop at gt_output4.
      concatenate gt_output4-period gt_output4-plant gt_output4-vendor gt_output4-pma
                  gt_output4-prod gt_output4-docty gt_output4-quan
                  gt_output4-cost gt_output4-retail
                  into gt_export2-text separated by '|'.

      append gt_export2.
      clear: gt_output4, gt_export2.
    endloop.
  else.
*--END OF INS-SUCHAPOP 20140626

*--START OF INS-SUCHAPOP 20140630
*--INS OF INS-SUCHAPOP 20150114
    clear: gt_output4, gt_export2.
    loop at gt_output4.
      gt_export2-text(4)      = gt_output4-period.
      gt_export2-text+4(4)    = gt_output4-plant.
      gt_export2-text+8(7)    = gt_output4-vendor.
      gt_export2-text+15(2)   = gt_output4-pma.
      gt_export2-text+17(12)  = gt_output4-prod.
      gt_export2-text+29(2)   = gt_output4-docty.
      gt_export2-text+31(13)  = gt_output4-filler1.
      gt_export2-text+44(16)  = gt_output4-quan.
      gt_export2-text+60(17)  = gt_output4-filler2.
      gt_export2-text+77(16)  = gt_output4-cost.
      gt_export2-text+93(15)  = gt_output4-filler3.
      gt_export2-text+108(16) = gt_output4-retail.
      gt_export2-text+124(10) = gt_output4-order.
      append gt_export2.
      clear: gt_output4, gt_export2.
    endloop.
*--END OF INS-SUCHAPOP 20150114
*--END OF INS-SUCHAPOP 20140630

*--INS OF INS-SUCHAPOP 20150114
*    CLEAR: gt_output4, gt_export2.
*  LOOP AT gt_output4.
*    gt_export2-text(4)      = gt_output4-period.
*    gt_export2-text+4(4)    = gt_output4-plant.
*    gt_export2-text+8(7)    = gt_output4-vendor.
*    gt_export2-text+15(2)   = gt_output4-pma.
*    gt_export2-text+17(12)  = gt_output4-prod.
*    gt_export2-text+29(2)   = gt_output4-docty.
**    gt_export2-text+31(13)  = gt_output4-filler1.
*    gt_export2-text+31(16)  = gt_output4-quan.
**    gt_export2-text+60(17)  = gt_output4-filler2.
*    gt_export2-text+47(16)  = gt_output4-cost.
**    gt_export2-text+93(15)  = gt_output4-filler3.
*    gt_export2-text+63(16) = gt_output4-retail.
*    gt_export2-text+79(10) = gt_output4-order.
*    APPEND gt_export2.
*    CLEAR: gt_output4, gt_export2.
*  ENDLOOP.
*--END OF INS-SUCHAPOP 20150114

  endif.  "INS-SUCHAPOP 20140626

endform.                    " f_output_stm2


*&---------------------------------------------------------------------*
*&      Form  f_export_unix2
*&---------------------------------------------------------------------*
form f_export_unix2.

  data: lv_unixid(2)    type c,
        lv_mappath      like sxpgcolist-parameters,
        lv_unixpath     like sxpgcolist-parameters.

* File path
  clear: lv_unixid, lv_mappath, lv_unixpath.
  case sy-sysid.
    when 'DV1'.
      lv_unixid = '00'.
    when 'QA1'.
      lv_unixid = '01'.
    when 'PR1'.
      lv_unixid = '02'.
  endcase.
  concatenate '/usr/sap/' sy-sysid '/DVEBMGS' lv_unixid
              '/work/' sy-mandt '/legacy/interface/outbound/'
              p_bukrs '/' p_event into lv_unixpath.
  concatenate lv_unixpath '/PURJV_PART2.TXT' into lv_mappath.


* Open file
  open dataset lv_mappath for output in text mode encoding default.
  if sy-subrc ne 0.
    message e000 with text-011.
  endif.

* Transfer records
  loop at gt_export2.
    transfer gt_export2-text to lv_mappath.
  endloop.

* Close file
  close dataset lv_mappath.

  if sy-subrc eq 0.
    message s000 with text-010.
  endif.

endform.                    " f_export_unix2


*------------------------------------------------------------*
*--                    FTP FORM_call                       --*
*--                     Nattawat K.                        --*
*--                      26/11/2018                        --*
*------------------------------------------------------------*
form ftp_call.

call function 'ZGS_FTPCMN_TBL'
      exporting
        prm_comid     = '0001'
        prm_event     = 'MMODS'
        prm_actnum    = 1
        prm_isexeftp  = 'X'
        prm_isexemail = ''
        prm_iswrerr   = ''.
if sy-subrc eq 0.

  call function 'ZGS_FTPCMN_TBL'
      exporting
        prm_comid     = '0001'
        prm_event     = 'MMODS'
        prm_actnum    = 2
        prm_isexeftp  = 'X'
        prm_isexemail = ''
        prm_iswrerr   = ''.
endif.





endform.